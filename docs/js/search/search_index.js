var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.127,1,0.576]],["body/components/AppComponent.html",[0,0.233,1,1.017,2,0.275,3,0.234,4,0.848,5,0.848,6,0.917,7,0.195,8,3.136,9,0.917,10,1.637,11,0.984,12,4.871,13,1.196,14,4.871,15,1.196,16,4.871,17,0.275,18,1.394,19,1.772,20,1.292,21,0.721,22,0.029,23,1.342,24,1.449,25,0.92,26,4.871,27,0.553,28,3.737,29,0.36,30,0.453,31,0.234,32,0.317,33,0.783,34,1.106,35,1.106,36,1.196,37,1.203,38,0.917,39,0.79,40,0.917,41,0.721,42,0.917,43,0.721,44,0.917,45,0.917,46,0.662,47,0.917,48,0.606,49,0.917,50,0.606,51,0.917,52,0.606,53,0.917,54,0.606,55,0.917,56,0.662,57,0.917,58,0.721,59,0.917,60,0.917,61,0.662,62,0.917,63,0.917,64,0.721,65,0.917,66,0.721,67,0.917,68,0.721,69,0.917,70,0.662,71,0.917,72,0.662,73,0.848,74,0.606,75,0.917,76,0.021,77,0.021]],["title/modules/AppModule.html",[78,1.604,79,2.126]],["body/modules/AppModule.html",[0,0.105,1,1.093,2,0.198,3,0.169,7,0.14,11,0.398,22,0.03,29,0.635,30,0.326,31,0.244,32,0.228,33,0.564,41,0.75,43,0.75,46,0.978,48,0.896,50,0.896,52,0.896,54,0.896,56,0.978,58,0.75,61,0.978,64,0.75,66,0.75,68,0.75,70,0.978,72,0.978,76,0.017,77,0.017,78,1.919,79,4.364,80,1.592,81,3.83,82,3.83,83,3.83,84,2.26,85,2.26,86,2.26,87,2.26,88,2.26,89,3.265,90,2.508,91,1.704,92,2.315,93,3.263,94,2.26,95,1.975,96,2.693,97,2.26,98,3.888,99,2.26,100,1.975,101,3.263,102,3.888,103,2.26,104,3.888,105,1.45,106,1.129,107,2.693,108,2.693,109,2.693,110,1.975,111,2.693,112,2.693,113,2.693,114,1.975,115,2.693,116,2.693,117,4.448,118,2.299,119,2.26,120,1.975,121,2.693,122,1.762,123,2.26,124,1.762,125,2.26,126,1.762,127,2.26,128,2.693,129,2.693,130,2.693,131,2.693,132,1.975,133,2.693,134,2.693,135,1.975,136,2.693,137,2.693,138,2.26,139,1.129,140,0.967,141,1.129,142,1.45,143,1.975,144,1.762,145,0.896,146,2.693]],["title/modules/AppRoutingModule.html",[78,1.604,89,1.921]],["body/modules/AppRoutingModule.html",[0,0.234,2,0.307,3,0.262,7,0.218,22,0.03,29,0.615,30,0.506,31,0.328,32,0.354,48,0.848,50,0.848,52,0.848,54,0.848,76,0.023,77,0.023,78,2.062,89,3.092,101,4.39,106,2.394,117,5.022,118,2.47,119,3.507,122,2.734,123,3.507,124,2.734,125,3.507,126,2.734,127,3.507,147,4.178,148,4.178,149,5.231,150,2.25,151,3.507,152,2.799,153,4.178,154,4.39,155,4.178,156,4.178,157,1.289,158,3.507,159,4.178,160,4.178]],["title/components/AuthComponent.html",[0,0.127,41,0.627]],["body/components/AuthComponent.html",[0,0.232,1,0.653,2,0.271,3,0.231,4,0.837,5,0.837,6,0.905,7,0.192,9,0.905,10,1.635,11,0.976,13,1.185,15,1.185,17,0.271,22,0.029,25,0.877,27,0.714,29,0.355,30,0.447,31,0.231,32,0.313,33,0.772,34,1.096,35,1.096,36,1.185,37,1.197,38,0.905,39,0.783,40,0.905,41,1.102,42,0.905,43,0.711,44,0.905,45,0.905,46,0.653,47,0.905,48,0.598,49,0.905,50,0.598,51,0.905,52,0.598,53,0.905,54,0.598,55,0.905,56,0.653,57,0.905,58,0.711,59,0.905,60,0.905,61,0.653,62,0.905,63,0.905,64,0.711,65,0.905,66,0.711,67,0.905,68,0.711,69,0.905,70,0.653,71,0.905,72,0.653,73,0.837,74,0.598,75,0.905,76,0.021,77,0.021,161,3.095,162,1.28,163,1.428,164,5.712,165,4.828,166,4.828,167,0.856,168,1.515,169,0.954,170,3.688,171,3.688,172,0.545,173,0.837,174,2.601]],["title/components/ConfirmEmailComponent.html",[0,0.127,43,0.627]],["body/components/ConfirmEmailComponent.html",[0,0.23,1,0.636,2,0.264,3,0.225,4,0.815,5,0.815,6,0.882,7,0.187,9,0.882,10,1.631,11,0.973,13,1.165,15,1.165,17,0.264,22,0.029,25,0.869,27,0.702,29,0.346,30,0.435,31,0.225,32,0.304,33,0.753,34,1.077,35,1.077,36,1.165,37,1.184,38,0.882,39,0.77,40,0.882,41,0.693,42,0.882,43,1.091,44,1.553,45,0.882,46,0.636,47,0.882,48,0.583,49,0.882,50,0.583,51,0.882,52,0.583,53,0.882,54,0.583,55,0.882,56,0.636,57,0.882,58,0.693,59,0.882,60,0.882,61,0.636,62,0.882,63,0.882,64,0.693,65,0.882,66,0.693,67,0.882,68,0.693,69,0.882,70,0.636,71,0.882,72,0.636,73,0.815,74,0.583,75,0.882,76,0.021,77,0.021,135,3.898,162,1.258,163,1.409,167,0.841,168,1.499,169,0.942,172,0.531,173,0.815,174,2.556,175,4.461,176,3.015,177,4.745,178,4.746,179,4.746,180,3.592,181,3.592]],["title/components/ContainerComponent.html",[0,0.127,46,0.576]],["body/components/ContainerComponent.html",[0,0.232,1,0.655,2,0.272,3,0.231,4,0.839,5,0.839,6,0.907,7,0.193,9,0.907,10,1.635,11,0.976,13,1.187,15,1.187,17,0.272,22,0.03,25,0.877,27,0.715,29,0.356,30,0.447,31,0.231,32,0.313,33,0.774,34,1.097,35,1.097,36,1.187,37,1.197,38,0.907,39,0.784,40,0.907,41,0.713,42,0.907,43,0.713,44,0.907,45,0.907,46,1.013,47,0.907,48,0.599,49,0.907,50,0.599,51,0.907,52,0.599,53,0.907,54,0.599,55,0.907,56,0.655,57,0.907,58,0.713,59,0.907,60,0.907,61,0.655,62,0.907,63,0.907,64,0.713,65,0.907,66,0.713,67,0.907,68,0.713,69,0.907,70,0.655,71,0.907,72,0.655,73,0.839,74,0.599,75,0.907,76,0.021,77,0.021,162,1.282,163,1.429,167,0.857,168,1.516,169,0.955,172,0.546,173,0.839,182,3.101,183,4.057,184,4.834,185,4.834,186,3.695,187,3.695]],["title/injectables/FavouritesFactory.html",[90,1.476,188,1.26]],["body/injectables/FavouritesFactory.html",[2,0.235,3,0.2,7,0.167,11,0.472,17,0.235,18,1.254,20,0.846,21,1.039,22,0.03,27,0.835,29,0.519,30,0.387,31,0.275,32,0.271,39,0.812,76,0.019,77,0.019,90,1.991,91,1.663,139,1.338,140,1.146,141,1.338,142,1.719,145,1.88,157,1.906,167,0.777,169,0.566,172,0.797,173,0.995,188,1.941,189,2.341,190,2.028,191,3.185,192,3.533,193,3.048,194,2.679,195,4.383,196,2.098,197,2.163,198,3.192,199,2.714,200,2.679,201,2.591,202,1.928,203,2.65,204,2.868,205,1.878,206,3.192,207,2.805,208,3.695,209,2.868,210,3.192,211,2.868,212,2.868,213,3.275,214,2.868,215,1.887,216,1.338,217,1.719,218,1.719,219,1.837,220,1.459,221,1.887,222,2.088,223,1.575,224,2.088,225,2.088,226,0.669,227,1.719,228,1.238,229,2.868,230,2.088,231,2.088,232,2.088,233,2.088,234,2.088,235,1.887,236,1.575]],["title/injectables/FlickrApiService.html",[91,1.003,188,1.26]],["body/injectables/FlickrApiService.html",[0,0.151,2,0.196,3,0.167,7,0.139,17,0.196,18,1.106,20,1.46,21,1.062,22,0.03,23,0.959,24,1.036,25,0.814,27,0.781,29,0.561,30,0.323,31,0.167,32,0.226,37,0.952,39,0.627,74,0.433,76,0.017,77,0.017,91,1.193,105,1.439,140,1.977,145,1.287,157,1.402,167,0.685,169,0.473,172,0.781,188,1.761,190,1.897,191,2.285,196,1.62,202,1.536,205,1.193,215,2.285,216,1.12,217,1.439,220,1.657,223,1.318,226,0.81,228,1.036,237,4.622,238,2.242,239,2.925,240,4.433,241,4.433,242,4.978,243,2.671,244,4.978,245,3.865,246,3.244,247,3.865,248,2.671,249,2.671,250,3.244,251,3.244,252,3.244,253,2.285,254,2.082,255,2.835,256,2.835,257,3.244,258,2.529,259,3.331,260,3.244,261,1.93,262,3.244,263,3.812,264,3.244,265,2.943,266,3.716,267,2.835,268,2.845,269,3.865,270,3.244,271,3.865,272,2.529,273,3.865,274,3.865,275,3.244,276,3.865,277,2.671,278,3.123,279,3.865,280,2.671,281,5.283,282,2.671,283,2.671,284,2.671,285,2.671,286,2.671,287,2.671,288,2.671,289,2.242,290,1.579,291,2.671,292,1.318,293,2.671,294,1.439,295,2.671,296,2.242,297,2.671,298,1.959,299,2.671,300,2.671,301,3.865,302,2.529,303,2.671,304,3.865,305,2.671,306,2.242,307,3.244,308,2.242,309,1.959,310,2.242,311,2.242,312,1.748,313,2.082,314,2.835,315,2.835,316,2.242,317,2.671,318,2.671,319,2.671,320,4.542,321,2.671,322,2.671,323,2.671,324,2.671,325,2.671,326,2.671,327,2.671,328,2.835,329,2.671,330,2.671,331,2.242,332,2.242,333,2.671,334,2.671]],["title/components/FlickrDetailsComponent.html",[0,0.127,48,0.527]],["body/components/FlickrDetailsComponent.html",[0,0.208,1,0.426,2,0.177,3,0.151,4,0.546,5,0.546,6,0.591,7,0.126,9,0.591,10,1.552,11,0.917,13,0.879,15,0.879,17,0.177,18,1.025,19,1.638,20,1.134,21,0.914,22,0.03,23,1.286,24,1.388,25,0.93,27,0.813,29,0.512,30,0.291,31,0.151,32,0.204,33,0.504,34,0.813,35,0.813,36,0.879,37,0.992,38,0.591,39,0.694,40,0.591,41,0.464,42,0.591,43,0.464,44,0.591,45,0.591,46,0.426,47,0.591,48,0.768,49,0.591,50,0.39,51,0.591,52,0.39,53,0.591,54,0.39,55,0.591,56,0.426,57,0.591,58,0.464,59,0.591,60,0.591,61,0.426,62,1.386,63,0.591,64,0.464,65,0.591,66,0.464,67,0.591,68,0.464,69,0.591,70,0.426,71,0.591,72,0.426,73,0.546,74,0.39,75,0.591,76,0.016,77,0.016,91,0.743,92,2.304,105,1.296,106,1.501,122,3.695,139,1.009,140,0.864,141,1.009,142,1.296,144,1.575,145,1.423,150,1.296,152,2.151,157,1.781,162,0.95,163,1.134,167,0.634,168,1.256,169,0.426,172,0.53,173,0.813,190,0.864,196,1.009,199,1.626,201,1.423,202,1.105,205,1.32,220,1.192,228,0.933,236,1.188,239,1.188,254,2.551,261,1.836,294,1.296,335,3.042,336,2.02,337,0.933,338,3.581,339,2.626,340,3.581,341,3.581,342,1.423,343,3.581,344,3.581,345,3.099,346,4.736,347,4.736,348,2.8,349,1.575,350,3.099,351,3.581,352,2.407,353,2.407,354,2.626,355,3.581,356,3.581,357,2.407,358,2.528,359,2.407,360,2.117,361,2.117,362,3.099,363,1.767,364,2.117,365,2.117,366,2.117,367,1.626,368,2.407,369,1.575,370,1.575,371,1.575,372,2.02,373,2.407,374,2.407,375,2.407,376,2.407,377,2.407,378,2.407,379,2.407,380,2.407,381,2.407,382,2.407,383,2.407,384,1.765,385,1.296,386,2.407,387,2.407,388,2.02,389,2.407,390,2.407,391,2.02]],["title/components/FlickrFavouritesComponent.html",[0,0.127,50,0.527]],["body/components/FlickrFavouritesComponent.html",[0,0.22,1,0.457,2,0.19,3,0.162,4,0.585,5,0.585,6,0.633,7,0.135,9,0.633,10,1.567,11,0.928,13,0.925,15,0.925,17,0.19,18,1.078,19,1.679,21,0.859,22,0.03,23,1.599,24,1.726,25,0.914,27,0.77,29,0.542,30,0.312,31,0.162,32,0.219,33,0.54,34,0.855,35,0.855,36,0.925,37,1.14,38,0.633,39,0.722,40,0.633,41,0.498,42,0.633,43,0.498,44,0.633,45,0.633,46,0.457,47,0.633,48,0.418,49,0.633,50,0.794,51,0.633,52,0.418,53,0.633,54,0.418,55,0.633,56,0.457,57,0.633,58,0.498,59,0.633,60,0.633,61,0.457,62,1.379,63,0.633,64,0.498,65,0.633,66,0.498,67,0.633,68,0.498,69,0.633,70,0.457,71,0.633,72,0.457,73,0.585,74,0.418,75,0.633,76,0.017,77,0.017,90,2.552,91,1.511,105,1.389,106,1.58,126,3.56,139,1.081,140,0.926,141,1.081,143,1.891,145,0.858,150,1.389,152,2.224,157,1.679,162,0.999,163,1.181,167,0.668,168,1.298,169,0.457,172,0.381,173,0.585,190,0.926,192,2.228,193,1.86,196,1.081,197,2.198,203,1.171,205,1.511,207,1.711,219,2.463,227,1.389,228,1,239,1.86,261,1.461,278,1.525,294,1.389,335,2.93,337,1,342,1.525,345,3.204,349,1.687,350,3.204,360,2.228,361,2.228,363,1.86,364,2.228,365,2.228,366,2.228,367,1.711,369,1.687,370,1.687,385,2.029,392,2.164,393,2.465,394,2.465,395,3.162,396,3.768,397,3.768,398,3.768,399,2.579,400,2.579,401,2.579,402,1.687,403,2.579,404,3.768,405,2.164,406,1.525,407,2.579,408,2.579,409,2.579,410,2.579]],["title/components/FlickrListComponent.html",[0,0.127,52,0.527]],["body/components/FlickrListComponent.html",[0,0.191,1,0.389,2,0.161,3,0.138,4,0.498,5,0.498,6,0.539,7,0.115,9,0.539,10,1.531,11,0.885,13,0.82,15,0.82,17,0.161,18,0.956,19,1.396,20,0.582,21,0.939,22,0.03,23,1.2,24,1.295,25,0.885,27,0.812,29,0.514,30,0.266,31,0.138,32,0.186,33,0.46,34,0.758,35,0.758,36,0.82,37,0.947,38,0.539,39,0.789,40,0.539,41,0.423,42,0.539,43,0.423,44,0.539,45,0.539,46,0.389,47,0.539,48,0.356,49,0.539,50,0.356,51,0.539,52,0.733,53,0.539,54,0.356,55,0.539,56,0.389,57,0.539,58,0.423,59,0.539,60,0.539,61,0.389,62,1.308,63,0.539,64,0.423,65,0.539,66,0.423,67,0.539,68,0.423,69,0.539,70,0.389,71,0.539,72,0.389,73,0.498,74,0.356,75,0.539,76,0.015,77,0.015,91,1.396,92,2.234,105,1.182,106,1.401,118,3.326,139,0.92,140,0.788,141,0.92,144,1.436,145,0.731,150,1.182,152,1.518,157,1.954,162,0.886,163,1.073,167,0.592,168,1.199,169,0.389,172,0.669,173,1.026,190,1.624,196,1.696,197,1.997,199,1.837,205,1.644,207,1.518,228,0.851,236,1.083,239,2.401,253,1.975,254,2.179,261,1.295,272,2.186,278,1.298,294,1.182,312,1.436,335,3.03,339,3.316,345,2.959,349,1.436,350,2.959,354,2.45,358,2.391,360,1.975,361,1.975,362,3.184,363,1.649,364,1.975,365,1.975,366,1.975,367,1.518,369,1.436,370,3.184,384,2.967,385,1.8,393,2.186,394,3.184,402,1.436,406,2.673,411,1.842,412,3.341,413,3.341,414,3.341,415,4.865,416,3.341,417,3.341,418,3.341,419,2.195,420,2.967,421,2.186,422,2.195,423,3.341,424,2.195,425,2.45,426,2.804,427,2.45,428,2.804,429,2.195,430,2.195,431,2.195,432,2.195,433,2.195,434,2.195,435,2.195,436,1.842,437,2.195,438,1.842,439,1.61,440,1.842,441,1.61,442,1.842,443,1.842,444,1.842,445,1.842,446,3.395,447,1.842,448,1.842,449,1.842,450,3.395,451,1.842,452,1.842]],["title/classes/FlickrPhoto.html",[32,0.275,205,1.003]],["body/classes/FlickrPhoto.html",[0,0.156,2,0.204,3,0.174,7,0.145,17,0.204,18,1.139,19,1.565,20,1.77,21,1.198,22,0.03,23,0.999,25,0.75,27,0.933,29,0.268,31,0.174,32,0.337,37,0.583,39,0.754,76,0.018,77,0.018,145,1.325,151,2.334,167,0.705,169,0.493,172,0.75,177,3.34,190,0.999,196,1.166,202,1.434,205,1.228,218,2.144,219,1.668,220,1.547,223,1.373,226,0.834,250,3.34,251,3.34,252,3.34,253,2.353,254,2.144,255,2.919,256,2.919,257,3.34,258,2.604,259,3.408,260,3.34,261,1.802,262,3.34,263,3.34,264,3.34,265,2.999,268,2.732,292,2.504,306,3.34,307,2.334,308,2.334,309,2.04,310,2.334,311,2.334,312,1.82,313,1.498,314,2.04,315,2.04,316,2.334,332,2.334,337,2.081,342,1.644,385,2.144,453,2.334,454,4.257,455,4.257,456,4.257,457,4.647,458,2.999,459,4.257,460,4.257,461,3.72,462,4.647,463,4.647,464,3.98,465,3.98,466,2.782,467,2.782,468,2.782,469,2.782,470,3.34,471,2.782,472,2.782,473,2.782,474,2.782,475,2.782,476,2.782,477,2.782,478,2.782,479,2.782,480,2.782,481,2.782,482,2.782,483,2.782,484,2.782,485,2.782,486,2.782,487,2.782,488,2.782,489,2.782,490,2.782,491,2.782,492,2.782,493,2.782,494,2.782,495,2.782,496,2.782,497,2.782,498,2.782,499,2.782,500,2.782,501,2.334,502,2.782,503,2.334,504,2.04,505,2.04,506,2.334,507,2.334,508,2.334,509,2.334,510,2.782,511,2.782,512,2.782,513,4.647,514,4.647,515,4.647,516,2.782,517,2.782,518,2.782,519,2.782,520,2.782]],["title/components/FlickrSearchComponent.html",[0,0.127,54,0.527]],["body/components/FlickrSearchComponent.html",[0,0.209,1,0.282,2,0.117,3,0.1,4,0.362,5,0.362,6,0.391,7,0.083,9,0.391,10,1.444,11,0.843,13,0.637,15,0.637,17,0.117,18,0.743,19,1.379,20,1.105,21,0.862,22,0.03,23,1.359,24,1.468,25,0.862,27,0.791,29,0.49,30,0.193,31,0.1,32,0.135,33,0.334,34,0.589,35,0.589,36,0.637,37,0.936,38,0.391,39,0.764,40,0.391,41,0.307,42,0.391,43,0.307,44,0.391,45,0.391,46,0.282,47,0.391,48,0.258,49,0.391,50,0.258,51,0.391,52,0.258,53,0.391,54,0.614,55,0.391,56,0.282,57,0.391,58,0.307,59,0.391,60,0.391,61,0.282,62,1.157,63,0.391,64,0.307,65,0.391,66,0.307,67,0.391,68,0.307,69,0.391,70,0.282,71,0.391,72,0.282,73,0.362,74,0.258,75,0.391,76,0.011,77,0.017,91,1.168,92,1.975,105,0.858,106,1.088,124,3.568,139,0.668,140,0.572,141,0.668,144,1.043,145,1.568,150,0.858,152,1.719,157,1.891,162,0.688,163,0.871,167,0.46,168,1.004,169,0.282,172,0.697,173,1.014,190,1.605,196,1.747,197,1.621,199,1.491,202,1.013,205,1.454,207,1.179,216,0.668,217,0.858,220,1.387,228,0.618,236,1.281,239,2.507,253,2.464,254,1.769,258,1.043,261,1.006,266,4.047,267,3.455,268,2.736,270,1.337,272,1.698,278,3.087,289,1.337,294,0.858,302,2.148,312,1.043,335,2.937,337,0.618,339,1.903,342,0.942,345,2.477,349,1.043,350,2.477,354,1.903,358,0.942,360,1.534,361,1.534,362,2.727,363,1.281,364,1.534,365,1.534,366,1.534,367,1.179,369,1.043,370,2.727,371,1.043,384,2.408,385,2.039,393,1.698,394,2.727,402,1.043,406,1.534,420,2.408,421,1.698,425,1.903,426,2.178,427,1.903,428,2.178,436,1.337,438,1.337,439,1.169,440,1.337,441,2.408,442,1.337,443,1.337,444,1.337,445,1.337,446,2.756,447,1.337,448,1.337,449,1.337,450,2.756,451,1.337,452,1.337,505,1.169,506,1.337,521,1.337,522,2.595,523,3.786,524,2.595,525,4.168,526,2.756,527,2.595,528,2.595,529,2.756,530,2.595,531,2.595,532,2.595,533,2.595,534,3.786,535,3.177,536,2.595,537,2.595,538,2.595,539,2.595,540,1.593,541,2.595,542,1.593,543,2.595,544,1.593,545,2.595,546,2.595,547,2.595,548,1.593,549,2.595,550,1.593,551,4.469,552,2.178,553,2.595,554,3.786,555,2.595,556,2.595,557,1.593,558,1.593,559,1.593,560,1.593,561,2.595,562,2.595,563,1.593,564,2.595,565,1.593,566,1.593,567,1.593,568,4.711,569,1.337,570,1.043,571,2.595,572,1.593,573,1.593,574,1.593,575,1.337,576,2.595,577,1.593,578,1.593,579,2.595,580,1.593,581,1.593,582,1.593,583,1.593,584,1.337,585,1.593,586,1.593,587,1.593,588,1.593,589,1.593,590,1.337,591,1.337,592,1.593,593,1.593,594,1.593,595,1.593,596,1.593,597,1.593,598,1.593,599,1.593,600,1.593,601,1.593,602,1.593]],["title/components/FlickrTileComponent.html",[0,0.127,56,0.576]],["body/components/FlickrTileComponent.html",[0,0.217,1,0.538,2,0.223,3,0.19,4,0.689,5,0.689,6,0.746,7,0.158,9,0.746,10,1.601,11,0.94,13,1.04,15,1.04,17,0.223,21,0.817,22,0.03,25,0.925,27,0.78,29,0.47,30,0.368,31,0.19,32,0.257,33,0.636,34,0.961,35,0.961,36,1.04,37,1.105,38,0.746,39,0.791,40,0.746,41,0.586,42,0.746,43,0.586,44,0.746,45,0.746,46,0.538,47,0.746,48,0.493,49,0.746,50,0.493,51,0.746,52,0.493,53,0.746,54,0.493,55,0.746,56,0.935,57,0.746,58,0.586,59,0.746,60,0.746,61,0.538,62,0.746,63,0.746,64,0.586,65,0.746,66,0.586,67,0.746,68,0.586,69,0.746,70,0.538,71,0.746,72,0.538,73,0.689,74,0.493,75,0.746,76,0.019,77,0.019,90,2.609,118,3.279,120,4.068,143,2.228,145,1.011,157,1.712,162,1.123,163,1.293,167,0.75,168,1.399,169,0.538,172,0.626,173,0.961,190,1.091,193,2.738,196,1.273,202,1.307,205,1.505,219,1.775,223,2.09,228,1.178,261,1.178,294,1.636,335,2.988,348,3.118,391,3.554,406,2.504,503,3.554,504,3.106,603,2.549,604,4.235,605,4.235,606,5.275,607,3.038,608,4.235,609,3.038,610,3.038,611,5.275,612,3.106,613,4.235,614,4.235,615,2.549,616,3.038,617,3.038,618,4.235,619,4.235,620,3.038,621,4.235,622,4.235]],["title/components/ForgotPasswordComponent.html",[0,0.127,58,0.627]],["body/components/ForgotPasswordComponent.html",[0,0.23,1,0.636,2,0.264,3,0.225,4,0.815,5,0.815,6,0.882,7,0.187,9,0.882,10,1.631,11,0.973,13,1.165,15,1.165,17,0.264,22,0.029,25,0.869,27,0.702,29,0.346,30,0.435,31,0.225,32,0.304,33,0.753,34,1.077,35,1.077,36,1.165,37,1.184,38,0.882,39,0.77,40,0.882,41,0.693,42,0.882,43,0.693,44,0.882,45,0.882,46,0.636,47,0.882,48,0.583,49,0.882,50,0.583,51,0.882,52,0.583,53,0.882,54,0.583,55,0.882,56,0.636,57,0.882,58,1.091,59,1.553,60,0.882,61,0.636,62,0.882,63,0.882,64,0.693,65,0.882,66,0.693,67,0.882,68,0.693,69,0.882,70,0.636,71,0.882,72,0.636,73,0.815,74,0.583,75,0.882,76,0.021,77,0.021,132,3.898,162,1.258,163,1.409,167,0.841,168,1.499,169,0.942,172,0.531,173,0.815,174,2.556,623,4.461,624,3.015,625,5.654,626,4.746,627,4.746,628,3.592,629,3.592]],["title/interfaces/IFlickrApiContract.html",[226,0.681,290,1.921]],["body/interfaces/IFlickrApiContract.html",[2,0.332,3,0.283,7,0.236,17,0.332,18,1.57,19,1.394,20,1.735,21,1.141,22,0.029,25,0.668,29,0.435,31,0.344,74,0.733,76,0.024,77,0.024,202,1.394,220,1.504,226,1.288,290,3.245,292,2.918,313,2.433,328,4.51,337,1.751,367,2.052,458,2.671,630,3.313,631,5.161,632,4.024,633,3.313,634,3.791,635,3.313]],["title/interfaces/IFlickrApiItemContract.html",[226,0.681,292,1.604]],["body/interfaces/IFlickrApiItemContract.html",[2,0.291,3,0.248,4,0.898,7,0.206,17,0.291,18,1.446,19,1.811,20,1.804,21,1.274,22,0.029,25,0.585,31,0.248,74,0.642,76,0.022,77,0.022,169,0.701,202,1.221,218,2.131,220,1.682,226,1.166,268,3.16,292,2.495,313,2.131,337,2.35,367,1.797,454,4.924,455,4.924,456,4.924,458,3.468,459,4.924,460,4.924,461,4.303,633,2.902,636,3.321,637,3.957,638,3.957,639,5.054,640,3.957]],["title/interfaces/IFlickrFeedContract.html",[226,0.681,632,2.126]],["body/interfaces/IFlickrFeedContract.html",[2,0.306,3,0.261,7,0.217,17,0.306,18,1.493,19,1.844,20,1.778,21,1.243,22,0.029,25,0.771,29,0.401,31,0.327,74,0.969,76,0.023,77,0.023,202,1.61,220,1.736,226,1.289,290,2.459,292,3.037,313,2.81,328,3.051,337,2.386,367,2.369,458,3.532,630,3.051,631,3.492,632,3.729,633,3.826,634,5.015,635,4.382]],["title/components/LayoutHeaderComponent.html",[0,0.127,61,0.576]],["body/components/LayoutHeaderComponent.html",[0,0.222,1,0.575,2,0.239,3,0.203,4,0.737,5,0.737,6,0.797,7,0.169,9,0.797,10,1.613,11,0.95,13,1.088,15,1.088,17,0.239,19,1.852,20,1.439,21,0.855,22,0.03,23,1.813,24,1.957,25,0.84,27,0.84,29,0.313,30,0.393,31,0.203,32,0.275,33,0.68,34,1.006,35,1.006,36,1.088,37,1.137,38,0.797,39,0.719,40,0.797,41,0.626,42,0.797,43,0.626,44,0.797,45,0.797,46,0.575,47,0.797,48,0.526,49,0.797,50,0.526,51,0.797,52,0.526,53,0.797,54,0.526,55,0.797,56,0.575,57,0.797,58,0.626,59,0.797,60,0.797,61,0.961,62,1.473,63,0.797,64,0.626,65,0.797,66,0.626,67,0.797,68,0.626,69,0.797,70,0.575,71,0.797,72,0.575,73,0.737,74,0.526,75,0.797,76,0.02,77,0.02,110,4.3,152,2.013,162,1.175,163,1.339,167,0.785,168,1.439,169,0.895,172,0.48,173,0.737,241,3.72,348,3.466,363,2.492,364,2.621,365,2.985,366,2.621,641,4.921,642,2.723,643,4.433,644,4.433,645,3.245,646,3.245,647,3.245,648,4.433,649,3.245,650,3.245,651,4.433]],["title/components/LoginComponent.html",[0,0.127,64,0.627]],["body/components/LoginComponent.html",[0,0.232,1,0.653,2,0.271,3,0.231,4,0.837,5,0.837,6,0.905,7,0.192,9,0.905,10,1.635,11,0.976,13,1.185,15,1.185,17,0.271,22,0.029,25,0.877,27,0.714,29,0.355,30,0.447,31,0.231,32,0.313,33,0.772,34,1.096,35,1.096,36,1.185,37,1.197,38,0.905,39,0.783,40,0.905,41,0.711,42,0.905,43,0.711,44,0.905,45,0.905,46,0.653,47,0.905,48,0.598,49,0.905,50,0.598,51,0.905,52,0.598,53,0.905,54,0.598,55,0.905,56,0.653,57,0.905,58,0.711,59,0.905,60,0.905,61,0.653,62,0.905,63,0.905,64,1.102,65,0.905,66,0.711,67,0.905,68,0.711,69,0.905,70,0.653,71,0.905,72,0.653,73,0.837,74,0.598,75,0.905,76,0.021,77,0.021,162,1.28,163,1.428,167,0.856,168,1.515,169,0.954,172,0.545,173,0.837,174,2.601,652,3.095,653,5.712,654,4.828,655,4.828,656,3.688,657,3.688]],["title/injectables/PhotoCache.html",[92,1.362,188,1.26]],["body/injectables/PhotoCache.html",[0,0.106,2,0.199,3,0.169,7,0.141,11,0.4,17,0.199,18,1.116,20,0.717,21,1.024,22,0.03,27,0.843,29,0.483,30,0.327,31,0.244,32,0.229,39,0.861,76,0.017,77,0.017,91,1.545,92,1.635,139,1.134,140,0.971,141,1.134,142,2.101,145,1.942,157,1.906,167,0.887,169,0.479,172,0.863,173,1.038,188,1.773,190,2.047,191,2.96,192,3.37,193,3.076,194,2.27,196,2.225,197,1.925,199,2.7,200,2.27,201,3.138,202,1.938,203,2.512,204,2.552,205,1.938,207,2.776,208,3.473,209,2.552,211,2.552,212,2.552,213,2.993,214,2.552,215,1.599,216,1.134,217,1.457,218,1.457,219,1.918,220,1.298,221,1.599,222,1.769,223,1.335,224,1.769,225,1.769,226,0.567,227,2.859,228,1.048,229,2.552,230,1.769,231,1.769,232,1.769,233,1.769,234,1.769,235,2.306,236,1.335,239,2.258,261,1.048,265,2.306,371,1.769,570,1.769,612,1.983,658,1.983,659,3.9,660,3.9,661,3.9,662,2.704,663,3.273,664,2.704,665,2.704,666,2.704,667,3.273,668,2.704,669,3.273,670,3.273,671,2.27,672,2.27,673,1.983,674,1.983,675,2.27,676,2.27,677,1.983,678,2.27,679,2.27,680,2.27,681,2.27]],["title/interfaces/PhotoHashTable.html",[203,1.476,226,0.681]],["body/interfaces/PhotoHashTable.html",[2,0.262,3,0.223,7,0.186,11,0.698,17,0.262,20,1.252,22,0.03,27,0.527,29,0.543,30,0.432,31,0.296,32,0.302,76,0.021,77,0.021,90,1.62,91,1.458,139,1.495,140,1.28,141,1.495,142,2.544,145,2.006,157,1.634,172,0.527,188,1.831,189,2.615,191,2.108,192,3.131,193,2.783,197,1.76,199,2.792,201,2.108,202,1.926,203,2.561,204,2.333,205,1.81,207,2.835,208,3.689,209,2.333,211,2.333,212,2.333,213,3.465,214,2.333,215,2.108,216,1.495,217,1.921,218,1.921,219,2.363,220,1.876,221,2.792,222,3.09,223,2.331,224,3.09,225,3.09,226,0.989,227,2.544,228,1.383,229,3.09,230,2.333,231,2.333,232,2.333,233,2.333,234,2.333,235,2.108,236,1.76,337,1.383,682,3.566]],["title/interfaces/PhotoHashTable-1.html",[203,1.232,226,0.568,683,1.99]],["body/interfaces/PhotoHashTable-1.html",[0,0.124,2,0.233,3,0.198,7,0.165,11,0.645,17,0.233,20,1.156,22,0.03,27,0.468,29,0.518,30,0.383,31,0.273,32,0.268,76,0.019,77,0.019,91,1.345,92,1.327,139,1.327,140,1.137,141,1.327,142,2.684,145,2.052,157,1.657,167,0.561,172,0.737,188,1.69,191,1.872,192,2.946,193,2.872,197,1.563,199,2.8,201,2.946,202,1.944,203,2.439,204,2.072,205,1.875,207,2.833,208,3.513,209,2.072,211,2.072,212,2.072,213,3.261,214,2.072,215,1.872,216,1.327,217,1.705,218,1.705,219,2.36,220,1.787,221,2.577,222,2.852,223,2.151,224,2.852,225,2.852,226,0.913,227,2.892,228,1.227,229,2.852,230,2.072,231,2.072,232,2.072,233,2.072,234,2.072,235,2.577,236,1.563,239,1.563,261,1.227,265,2.577,337,1.227,371,2.072,570,2.072,612,2.322,658,2.322,663,2.657,667,2.657,669,2.657,670,2.657,671,2.657,672,2.657,673,2.322,674,2.322,675,2.657,676,2.657,677,2.322,678,2.657,679,2.657,680,2.657,681,2.657,684,3.166]],["title/components/ProfileComponent.html",[0,0.127,66,0.627]],["body/components/ProfileComponent.html",[0,0.232,1,0.653,2,0.271,3,0.231,4,0.837,5,0.837,6,0.905,7,0.192,9,0.905,10,1.635,11,0.976,13,1.185,15,1.185,17,0.271,22,0.029,25,0.877,27,0.714,29,0.355,30,0.447,31,0.231,32,0.313,33,0.772,34,1.096,35,1.096,36,1.185,37,1.197,38,0.905,39,0.783,40,0.905,41,0.711,42,0.905,43,0.711,44,0.905,45,0.905,46,0.653,47,0.905,48,0.598,49,0.905,50,0.598,51,0.905,52,0.598,53,0.905,54,0.598,55,0.905,56,0.653,57,0.905,58,0.711,59,0.905,60,0.905,61,0.653,62,0.905,63,0.905,64,0.711,65,0.905,66,1.102,67,0.905,68,0.711,69,0.905,70,0.653,71,0.905,72,0.653,73,0.837,74,0.598,75,0.905,76,0.021,77,0.021,162,1.28,163,1.428,167,0.856,168,1.515,169,0.954,172,0.545,173,0.837,174,2.601,685,3.095,686,5.712,687,4.828,688,4.828,689,3.688,690,3.688]],["title/components/RegisterComponent.html",[0,0.127,68,0.627]],["body/components/RegisterComponent.html",[0,0.232,1,0.653,2,0.271,3,0.231,4,0.837,5,0.837,6,0.905,7,0.192,9,0.905,10,1.635,11,0.976,13,1.185,15,1.185,17,0.271,22,0.029,25,0.877,27,0.714,29,0.355,30,0.447,31,0.231,32,0.313,33,0.772,34,1.096,35,1.096,36,1.185,37,1.197,38,0.905,39,0.783,40,0.905,41,0.711,42,0.905,43,0.711,44,0.905,45,0.905,46,0.653,47,0.905,48,0.598,49,0.905,50,0.598,51,0.905,52,0.598,53,0.905,54,0.598,55,0.905,56,0.653,57,0.905,58,0.711,59,0.905,60,0.905,61,0.653,62,0.905,63,0.905,64,0.711,65,0.905,66,0.711,67,0.905,68,1.102,69,0.905,70,0.653,71,0.905,72,0.653,73,0.837,74,0.598,75,0.905,76,0.021,77,0.021,162,1.28,163,1.428,167,0.856,168,1.515,169,0.954,172,0.545,173,0.837,174,2.601,691,3.095,692,5.712,693,4.828,694,4.828,695,3.688,696,3.688]],["title/components/SidebarComponent.html",[0,0.127,70,0.576]],["body/components/SidebarComponent.html",[0,0.217,1,0.537,2,0.223,3,0.19,4,0.688,5,0.688,6,0.745,7,0.158,9,0.745,10,1.6,11,0.96,13,1.039,15,1.039,17,0.223,18,1.211,19,1.772,21,0.585,22,0.03,23,1.089,24,1.176,25,0.871,27,0.721,29,0.408,30,0.367,31,0.19,32,0.257,33,0.635,34,0.96,35,0.96,36,1.039,37,1.104,38,0.745,39,0.686,40,0.745,41,0.585,42,0.745,43,0.585,44,0.745,45,0.745,46,0.537,47,0.745,48,0.492,49,0.745,50,0.492,51,0.745,52,0.492,53,0.745,54,0.492,55,0.745,56,0.537,57,0.745,58,0.585,59,0.745,60,0.745,61,0.537,62,0.745,63,0.745,64,0.585,65,0.745,66,0.585,67,0.745,68,0.585,69,0.745,70,0.934,71,0.745,72,0.537,73,1.106,74,0.492,75,0.745,76,0.019,77,0.019,152,2.608,154,3.551,157,1.627,158,3.551,162,1.122,163,1.292,167,0.75,168,1.398,169,0.863,172,0.449,173,0.688,219,1.773,266,2.768,268,2.279,358,2.501,363,2.834,697,2.545,698,3.033,699,4.231,700,3.553,701,3.033,702,3.033,703,3.551,704,4.231,705,4.819,706,6.306,707,5.742,708,5.742,709,3.551,710,4.231,711,4.231,712,3.033,713,2.545,714,3.033,715,3.033]],["title/interfaces/SidebarItem.html",[226,0.681,700,1.921]],["body/interfaces/SidebarItem.html",[2,0.334,3,0.285,7,0.237,17,0.334,18,1.577,19,1.902,20,1.774,21,1.218,22,0.029,31,0.285,76,0.024,77,0.024,152,2.8,190,1.979,226,1.155,363,3.043,470,4.977,700,3.258,705,5.173,709,5.173,716,3.818]],["title/components/SidebarItemComponent.html",[0,0.127,72,0.576]],["body/components/SidebarItemComponent.html",[0,0.228,1,0.62,2,0.257,3,0.219,4,0.795,5,0.795,6,0.86,7,0.183,9,0.86,10,1.626,11,0.97,13,1.146,15,1.146,17,0.257,21,0.676,22,0.029,25,0.862,27,0.776,29,0.45,30,0.424,31,0.219,32,0.297,33,0.734,34,1.059,35,1.059,36,1.146,37,1.173,38,0.86,39,0.757,40,0.86,41,0.676,42,0.86,43,0.676,44,0.86,45,0.86,46,0.62,47,0.86,48,0.568,49,0.86,50,0.568,51,0.86,52,0.568,53,0.86,54,0.568,55,0.86,56,0.62,57,0.86,58,0.676,59,0.86,60,0.86,61,0.62,62,0.86,63,0.86,64,0.676,65,0.86,66,0.676,67,0.86,68,0.676,69,0.86,70,0.62,71,0.86,72,0.992,73,1.389,74,0.851,75,0.86,76,0.021,77,0.021,114,4.105,162,1.237,163,1.392,167,0.827,168,1.484,169,0.93,172,0.518,173,0.795,348,3.309,700,3.309,713,2.939,717,4.698,718,2.939,719,4.666,720,4.666,721,4.666,722,3.502,723,3.502,724,4.666]],["title/coverage.html",[725,3.724]],["body/coverage.html",[0,0.257,1,0.61,7,0.179,8,2.887,21,0.664,22,0.03,32,0.292,41,0.664,43,0.664,46,0.61,48,0.558,50,0.558,52,0.558,54,0.558,56,0.61,58,0.664,61,0.61,64,0.664,66,0.664,68,0.664,70,0.61,72,0.61,76,0.02,77,0.02,90,1.562,91,1.062,92,1.442,110,2.523,114,2.523,118,2.726,120,2.523,122,2.251,124,2.251,126,2.251,132,2.523,135,2.523,140,1.235,161,2.887,175,2.887,176,2.887,182,2.887,188,2.017,189,3.382,203,2.094,205,1.062,216,1.933,226,1.25,237,2.887,238,2.887,290,2.034,292,1.698,302,2.251,335,3.121,336,2.887,392,2.887,411,2.887,453,2.887,509,2.887,521,2.887,552,5.49,603,2.887,623,2.887,624,2.887,630,3.382,632,2.251,636,2.887,641,2.887,642,2.887,652,2.887,658,3.382,685,2.887,691,2.887,697,2.887,700,2.034,716,2.887,717,2.887,718,2.887,725,2.887,726,2.887,727,3.44,728,3.44,729,3.44,730,6.193,731,4.611,732,4.611,733,4.611,734,3.44,735,3.44,736,3.44,737,3.44,738,3.44,739,3.44,740,4.611,741,4.611,742,2.887,743,3.44,744,3.44,745,3.44,746,3.44,747,3.44,748,3.44,749,3.44,750,4.611,751,4.611,752,2.887,753,3.44,754,2.887,755,3.382,756,4.611,757,2.887,758,3.44]],["title/dependencies.html",[80,2.311,759,2.713]],["body/dependencies.html",[22,0.03,30,0.543,76,0.024,77,0.024,80,2.652,97,3.765,99,4.587,100,4.008,103,3.765,150,2.416,246,3.765,402,3.576,421,2.935,760,4.486,761,6.583,762,4.486,763,4.486,764,4.486,765,4.486,766,4.486,767,4.486,768,4.486,769,4.486,770,4.486,771,4.486,772,5.465,773,4.486,774,4.486,775,4.486,776,4.486,777,4.486,778,4.486,779,4.486,780,3.765,781,4.486,782,4.486,783,4.486,784,4.486]],["title/index.html",[17,0.199,785,2.713,786,2.277]],["body/index.html",[0,0.196,3,0.178,5,0.294,7,0.068,11,0.635,19,1.027,22,0.029,23,0.785,24,0.847,25,0.84,34,0.294,35,0.294,39,0.21,73,1.024,74,0.46,76,0.01,77,0.01,80,1.676,95,0.949,138,1.834,157,0.4,172,0.191,183,1.834,190,0.465,193,1.991,202,0.875,207,0.588,216,2.035,219,2.145,220,1.849,221,0.765,227,1.177,235,2.198,253,2.384,254,2.529,255,3.444,256,3.308,258,1.43,259,1.602,261,1.291,265,0.765,266,3.588,267,2.079,268,0.697,272,2.178,275,2.379,278,0.765,296,3.603,298,3.444,302,1.43,309,0.949,313,0.697,314,0.949,315,0.949,331,1.087,337,1.749,342,0.765,348,0.765,360,0.765,362,1.855,367,1.512,372,2.379,388,4.384,393,1.43,394,1.43,395,1.087,405,1.087,406,2.198,420,1.602,421,0.847,425,0.949,427,0.949,439,4.022,441,4.508,458,0.765,461,0.949,501,1.834,504,0.949,505,4.49,507,3.786,508,1.087,526,4.81,529,1.087,569,2.794,570,1.43,575,1.834,584,1.834,590,1.834,591,1.087,615,1.834,635,2.442,673,2.079,674,2.442,677,1.602,683,2.079,703,1.087,726,1.087,780,3.385,786,1.834,787,2.185,788,1.295,789,4.034,790,3.329,791,3.329,792,1.295,793,1.295,794,1.295,795,1.295,796,1.295,797,4.034,798,1.087,799,3.329,800,4.994,801,2.185,802,1.295,803,1.295,804,2.834,805,1.295,806,2.185,807,6.561,808,2.834,809,1.295,810,1.295,811,5.116,812,4.034,813,1.295,814,1.295,815,2.834,816,2.834,817,1.295,818,1.295,819,2.185,820,2.185,821,1.834,822,2.185,823,2.185,824,4.511,825,1.295,826,1.295,827,2.834,828,1.295,829,1.295,830,2.185,831,2.185,832,2.834,833,1.295,834,1.295,835,2.185,836,2.185,837,1.295,838,1.295,839,1.295,840,1.295,841,4.034,842,1.295,843,2.834,844,2.185,845,1.295,846,1.295,847,1.295,848,1.295,849,1.295,850,1.295,851,1.295,852,2.185,853,1.295,854,1.295,855,2.185,856,4.034,857,3.329,858,2.185,859,3.329,860,2.185,861,2.379,862,6.123,863,1.295,864,2.185,865,1.295,866,1.295,867,1.295,868,1.295,869,2.185,870,2.185,871,3.719,872,2.834,873,1.295,874,1.295,875,1.295,876,1.295,877,1.295,878,2.185,879,2.834,880,4.034,881,3.719,882,1.295,883,1.295,884,3.329,885,1.295,886,2.185,887,1.295,888,1.295,889,3.329,890,2.185,891,1.295,892,1.295,893,1.295,894,2.834,895,2.185,896,1.295,897,3.719,898,3.719,899,2.834,900,3.329,901,3.329,902,2.834,903,4.855,904,1.295,905,2.185,906,1.295,907,1.295,908,1.295,909,1.295,910,1.295,911,2.185,912,2.834,913,2.834,914,2.185,915,1.295,916,1.295,917,1.295,918,1.295,919,1.295,920,2.834,921,2.185,922,1.295,923,1.295,924,3.719,925,1.295,926,1.295,927,1.295,928,1.295,929,1.295,930,1.295,931,1.295,932,1.295,933,5.116,934,1.834,935,2.185,936,1.295,937,2.185,938,2.185,939,1.295,940,1.295,941,1.295,942,1.295,943,1.295,944,1.295,945,1.295,946,4.855,947,4.696,948,2.185,949,1.295,950,4.994,951,1.295,952,1.295,953,1.295,954,1.295,955,1.295,956,1.295,957,1.295,958,2.185,959,1.295,960,1.295,961,1.295,962,1.295,963,1.295,964,1.295,965,3.329,966,1.295,967,6.097,968,4.855,969,4.855,970,4.855,971,4.855,972,3.719,973,1.295,974,1.295,975,1.295,976,1.295,977,1.295,978,1.295,979,3.329,980,2.834,981,1.295,982,2.834,983,1.295,984,1.295,985,1.295,986,1.295,987,1.295,988,1.295,989,1.295,990,3.719,991,1.295,992,1.295,993,1.295,994,1.295,995,1.295,996,2.185,997,3.329,998,1.295]],["title/modules.html",[78,2.19]],["body/modules.html",[22,0.026,76,0.026,77,0.026,78,2.542,79,3.37,89,3.045,100,3.777,798,4.978,821,4.323,999,5.151,1000,5.151,1001,5.151]],["title/overview.html",[1002,3.724]],["body/overview.html",[0,0.156,1,1.118,22,0.029,31,0.249,32,0.337,33,0.834,46,0.989,48,0.906,50,0.906,52,0.906,54,0.906,56,0.989,61,0.989,70,0.989,72,0.989,76,0.022,77,0.022,78,2.504,79,4.466,80,2.354,81,3.342,82,3.342,83,3.342,84,3.342,85,3.342,86,3.342,87,3.342,88,3.342,89,3.301,90,2.536,91,1.724,92,2.341,93,4.258,94,3.342,95,2.92,106,1.669,188,1.544,226,0.834,683,2.92,742,3.342,752,3.342,861,3.342,934,3.342,1002,3.342,1003,3.982]],["title/routes.html",[106,1.86]],["body/routes.html",[22,0.026,76,0.026,77,0.026,106,2.212]],["title/miscellaneous/variables.html",[755,2.867,1004,2.277]],["body/miscellaneous/variables.html",[17,0.342,21,1.077,22,0.029,23,2.005,24,2.165,76,0.025,77,0.025,199,2.111,216,2.704,240,4.686,298,4.094,358,2.747,361,3.67,385,2.503,535,4.686,754,3.9,755,3.408,757,3.9,1004,3.9,1005,4.647,1006,4.647,1007,5.583,1008,5.583,1009,5.583,1010,4.647,1011,4.647,1012,4.647,1013,4.647,1014,4.647]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":552,"title":{},"body":{"components/FlickrSearchComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":683,"title":{"interfaces/PhotoHashTable-1.html":{}},"body":{"index.html":{},"overview.html":{}}}],["1.18.3",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":752,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2",{"_index":934,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/product",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.amazonaws.com/stag",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":861,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/6",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":936,"title":{},"body":{"index.html":{}}}],["4.16.3",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1003,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":742,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["6.0.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["9._",{"_index":515,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["aaa",{"_index":851,"title":{},"body":{"index.html":{}}}],["accept",{"_index":303,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["account",{"_index":614,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["act",{"_index":211,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["activ",{"_index":948,"title":{},"body":{"index.html":{}}}],["activatedrout",{"_index":350,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["actual_compon",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["add",{"_index":917,"title":{},"body":{"index.html":{}}}],["agaisnt",{"_index":613,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["agil",{"_index":857,"title":{},"body":{"index.html":{}}}],["alert",{"_index":440,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["allow",{"_index":522,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["alreadi",{"_index":943,"title":{},"body":{"index.html":{}}}],["anchor",{"_index":953,"title":{},"body":{"index.html":{}}}],["angular",{"_index":841,"title":{},"body":{"index.html":{}}}],["angular.git",{"_index":805,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":810,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["angular/compil",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"dependencies.html":{}}}],["angular/express",{"_index":837,"title":{},"body":{"index.html":{}}}],["angular/form",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"dependencies.html":{}}}],["angular6",{"_index":823,"title":{},"body":{"index.html":{}}}],["api",{"_index":202,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["api.ap",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.servic",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["api.service.t",{"_index":238,"title":{},"body":{"injectables/FlickrApiService.html":{},"coverage.html":{}}}],["api.service.ts:16",{"_index":280,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api.service.ts:17",{"_index":282,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api.service.ts:18",{"_index":245,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api.service.ts:49",{"_index":248,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api/flickr",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["apiurl",{"_index":240,"title":{},"body":{"injectables/FlickrApiService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":822,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":304,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["appmodul",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":891,"title":{},"body":{"index.html":{}}}],["approutingmodul",{"_index":89,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architectur",{"_index":673,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["aren't",{"_index":264,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["array",{"_index":319,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["artifact",{"_index":991,"title":{},"body":{"index.html":{}}}],["ask",{"_index":580,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["assets/img/dragon_lines_w.png",{"_index":710,"title":{},"body":{"components/SidebarComponent.html":{}}}],["assets/img/flickr.png",{"_index":364,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{}}}],["assets/img/flower_lines_w.png",{"_index":711,"title":{},"body":{"components/SidebarComponent.html":{}}}],["assets/img/stag_lines_w.png",{"_index":704,"title":{},"body":{"components/SidebarComponent.html":{}}}],["auth",{"_index":164,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth'},{'nam",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["auth.component.css",{"_index":165,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":166,"title":{},"body":{"components/AuthComponent.html":{}}}],["authcompon",{"_index":41,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["authent",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":454,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["author_id",{"_index":455,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["authour",{"_index":797,"title":{},"body":{"index.html":{}}}],["authouremail",{"_index":462,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["authouremail():str",{"_index":511,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["authournam",{"_index":463,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["authourname():str",{"_index":518,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["automat",{"_index":986,"title":{},"body":{"index.html":{}}}],["avail",{"_index":821,"title":{},"body":{"index.html":{},"modules.html":{}}}],["aw",{"_index":843,"title":{},"body":{"index.html":{}}}],["back",{"_index":504,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{},"index.html":{}}}],["backend",{"_index":272,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["backlog",{"_index":902,"title":{},"body":{"index.html":{}}}],["backstopj",{"_index":860,"title":{},"body":{"index.html":{}}}],["bar",{"_index":981,"title":{},"body":{"index.html":{}}}],["bdd",{"_index":894,"title":{},"body":{"index.html":{}}}],["bdd/tdd",{"_index":965,"title":{},"body":{"index.html":{}}}],["beanstalk",{"_index":840,"title":{},"body":{"index.html":{}}}],["befor",{"_index":584,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["between",{"_index":886,"title":{},"body":{"index.html":{}}}],["board",{"_index":794,"title":{},"body":{"index.html":{}}}],["bodi",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["boiler",{"_index":955,"title":{},"body":{"index.html":{}}}],["boilerpl",{"_index":954,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":470,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/SidebarItem.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["box",{"_index":546,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["branch",{"_index":880,"title":{},"body":{"index.html":{}}}],["broken",{"_index":939,"title":{},"body":{"index.html":{}}}],["brows",{"_index":798,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":405,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"index.html":{}}}],["build",{"_index":990,"title":{},"body":{"index.html":{}}}],["built",{"_index":870,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":670,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["busi",{"_index":912,"title":{},"body":{"index.html":{}}}],["button",{"_index":979,"title":{},"body":{"index.html":{}}}],["cach",{"_index":199,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"miscellaneous/variables.html":{}}}],["cache/api",{"_index":376,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["call",{"_index":845,"title":{},"body":{"index.html":{}}}],["callback",{"_index":553,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["care",{"_index":375,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["catcherror",{"_index":287,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["chang",{"_index":591,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["check",{"_index":331,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{}}}],["chevron",{"_index":707,"title":{},"body":{"components/SidebarComponent.html":{}}}],["chosen",{"_index":829,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":874,"title":{},"body":{"index.html":{}}}],["ci",{"_index":854,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":877,"title":{},"body":{"index.html":{}}}],["class",{"_index":32,"title":{"classes/FlickrPhoto.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cleartimeout",{"_index":555,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["cli",{"_index":808,"title":{},"body":{"index.html":{}}}],["click",{"_index":978,"title":{},"body":{"index.html":{}}}],["client",{"_index":804,"title":{},"body":{"index.html":{}}}],["clone",{"_index":801,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":789,"title":{},"body":{"index.html":{}}}],["cognito",{"_index":849,"title":{},"body":{"index.html":{}}}],["collect",{"_index":915,"title":{},"body":{"index.html":{}}}],["comma",{"_index":545,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["commit",{"_index":908,"title":{},"body":{"index.html":{}}}],["compat",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["compnent",{"_index":338,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["compodoc",{"_index":819,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["components/app.compon",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/auth.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/confirm",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/forgot",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/login/login.compon",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/profile/profile.compon",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/register/register.compon",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["components/container/container.compon",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["components/container/flickr",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/sidebar/sidebar",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar/sidebar.compon",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["configur",{"_index":577,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["confirm",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["confirmemailcompon",{"_index":43,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["console.log('&#x1f44b",{"_index":295,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["console.log('&#x1f4aa",{"_index":297,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["console.log('&#x1f600",{"_index":299,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["console.log('this.favouritesfactory.photo",{"_index":618,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["console.log(errmsg",{"_index":452,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["const",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/FlickrPhoto.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiItemContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["constructor(contract",{"_index":464,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["constructor(favouritesfactori",{"_index":607,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["constructor(flickrapi",{"_index":194,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{}}}],["constructor(http",{"_index":243,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["constructor(priv",{"_index":228,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["constructor(rout",{"_index":349,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["contact",{"_index":445,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["contain",{"_index":183,"title":{},"body":{"components/ContainerComponent.html":{},"index.html":{}}}],["container'},{'nam",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["container.component.css",{"_index":184,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.html",{"_index":185,"title":{},"body":{"components/ContainerComponent.html":{}}}],["containercompon",{"_index":46,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["content",{"_index":305,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["continu",{"_index":855,"title":{},"body":{"index.html":{}}}],["contract",{"_index":332,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["contract.author",{"_index":494,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.author_id",{"_index":496,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.date_taken",{"_index":488,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.descript",{"_index":490,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.link",{"_index":484,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.media.m",{"_index":486,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.photo_id",{"_index":500,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.publish",{"_index":492,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.tag",{"_index":498,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.titl",{"_index":482,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract:iflickrapiitemcontract",{"_index":330,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["contracts/iflickrapiitemcontract",{"_index":479,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["cooki",{"_index":225,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["copi",{"_index":671,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["core",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cost",{"_index":887,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":725,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":255,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["critreria",{"_index":271,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["crumb",{"_index":365,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{}}}],["crumb.titl",{"_index":651,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["css",{"_index":864,"title":{},"body":{"index.html":{}}}],["custom",{"_index":921,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":366,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{}}}],["data",{"_index":252,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["date_taken",{"_index":456,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["deafult",{"_index":975,"title":{},"body":{"index.html":{}}}],["debouncetim",{"_index":563,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["debouncetime(this.searchtimeout",{"_index":585,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["decid",{"_index":676,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["declar",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoupl",{"_index":378,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["delay",{"_index":534,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["delet",{"_index":232,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["deliv",{"_index":930,"title":{},"body":{"index.html":{}}}],["demo",{"_index":788,"title":{},"body":{"index.html":{}}}],["depend",{"_index":80,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":856,"title":{},"body":{"index.html":{}}}],["descript",{"_index":337,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["design",{"_index":897,"title":{},"body":{"index.html":{}}}],["desktopa",{"_index":980,"title":{},"body":{"index.html":{}}}],["desktopbdd/tdd",{"_index":973,"title":{},"body":{"index.html":{}}}],["desktopcod",{"_index":983,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":231,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["detail",{"_index":254,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["details'},{'nam",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["details.compon",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":343,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.html",{"_index":344,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.t",{"_index":336,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:30",{"_index":368,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":359,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:57",{"_index":352,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:58",{"_index":351,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:63",{"_index":357,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":353,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details/flickr",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":984,"title":{},"body":{"index.html":{}}}],["dev/test/stag",{"_index":838,"title":{},"body":{"index.html":{}}}],["develop",{"_index":296,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{}}}],["di",{"_index":372,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"index.html":{}}}],["direct",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":989,"title":{},"body":{"index.html":{}}}],["directori",{"_index":993,"title":{},"body":{"index.html":{}}}],["display",{"_index":339,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["dist",{"_index":992,"title":{},"body":{"index.html":{}}}],["distinctuntilchang",{"_index":564,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["do",{"_index":527,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["doc",{"_index":790,"title":{},"body":{"index.html":{}}}],["docker",{"_index":832,"title":{},"body":{"index.html":{}}}],["document",{"_index":726,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["dont",{"_index":530,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["dotenv",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":940,"title":{},"body":{"index.html":{}}}],["dri",{"_index":371,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["driver",{"_index":876,"title":{},"body":{"index.html":{}}}],["duplic",{"_index":581,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["dynam",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["dynamodb",{"_index":508,"title":{},"body":{"classes/FlickrPhoto.html":{},"index.html":{}}}],["e.g",{"_index":931,"title":{},"body":{"index.html":{}}}],["e2",{"_index":812,"title":{},"body":{"index.html":{}}}],["each",{"_index":258,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["element",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["email",{"_index":177,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"classes/FlickrPhoto.html":{}}}],["email'},{'nam",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["email.compon",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["email.component.css",{"_index":178,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.html",{"_index":179,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.t",{"_index":176,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:12",{"_index":181,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:8",{"_index":180,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email/confirm",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["emails[0",{"_index":517,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["enagg",{"_index":926,"title":{},"body":{"index.html":{}}}],["end",{"_index":997,"title":{},"body":{"index.html":{}}}],["enough",{"_index":944,"title":{},"body":{"index.html":{}}}],["enter",{"_index":952,"title":{},"body":{"index.html":{}}}],["entir",{"_index":567,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["env",{"_index":910,"title":{},"body":{"index.html":{}}}],["environ",{"_index":216,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":279,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["environment.searchtimeout",{"_index":561,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["environments/environ",{"_index":217,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["epic",{"_index":933,"title":{},"body":{"index.html":{}}}],["err",{"_index":436,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["errmsg",{"_index":446,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error",{"_index":421,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["error.messag",{"_index":450,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error.statu",{"_index":448,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error.statustext",{"_index":449,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error.tostr",{"_index":451,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["escal",{"_index":444,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["even",{"_index":262,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["event",{"_index":958,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":342,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["execut",{"_index":996,"title":{},"body":{"index.html":{}}}],["expect",{"_index":946,"title":{},"body":{"index.html":{}}}],["experi",{"_index":941,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"overview.html":{}}}],["express",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["expressj",{"_index":827,"title":{},"body":{"index.html":{}}}],["extrem",{"_index":892,"title":{},"body":{"index.html":{}}}],["fa",{"_index":706,"title":{},"body":{"components/SidebarComponent.html":{}}}],["facad",{"_index":213,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["facade/cach",{"_index":675,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["factori",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["fail",{"_index":420,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["fals",{"_index":385,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":795,"title":{},"body":{"index.html":{}}}],["favicon",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["favourit",{"_index":219,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["favourites'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["favourites.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["favourites.component.css",{"_index":396,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.html",{"_index":397,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.t",{"_index":392,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"coverage.html":{}}}],["favourites.component.ts:30",{"_index":401,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.ts:50",{"_index":400,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.ts:57",{"_index":398,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.ts:62",{"_index":399,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites/flickr",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrFavouritesComponent.html":{},"coverage.html":{}}}],["favouritesfactori",{"_index":90,"title":{"injectables/FavouritesFactory.html":{}},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrTileComponent.html":{},"interfaces/PhotoHashTable.html":{},"coverage.html":{},"overview.html":{}}}],["favuorit",{"_index":234,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["favuoritesand",{"_index":200,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{}}}],["featur",{"_index":817,"title":{},"body":{"index.html":{}}}],["feed",{"_index":367,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["feedback",{"_index":916,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":270,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{}}}],["finish",{"_index":796,"title":{},"body":{"index.html":{}}}],["first",{"_index":355,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["fix",{"_index":389,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["flag",{"_index":995,"title":{},"body":{"index.html":{}}}],["flickr",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["flickr/search",{"_index":951,"title":{},"body":{"index.html":{}}}],["flickr/{mockimageid",{"_index":949,"title":{},"body":{"index.html":{}}}],["flickrapi",{"_index":197,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["flickrapiservic",{"_index":91,"title":{"injectables/FlickrApiService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"overview.html":{}}}],["flickrdetailscompon",{"_index":48,"title":{"components/FlickrDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrfavouritescompon",{"_index":50,"title":{"components/FlickrFavouritesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrfe",{"_index":328,"title":{},"body":{"injectables/FlickrApiService.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["flickrimag",{"_index":966,"title":{},"body":{"index.html":{}}}],["flickrlistcompon",{"_index":52,"title":{"components/FlickrListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrphoto",{"_index":205,"title":{"classes/FlickrPhoto.html":{}},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["flickrphoto(contract",{"_index":334,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["flickrphotomodel",{"_index":218,"title":{},"body":{"injectables/FavouritesFactory.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["flickrsearchcompon",{"_index":54,"title":{"components/FlickrSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrtilecompon",{"_index":56,"title":{"components/FlickrTileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flikr",{"_index":703,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["focu",{"_index":929,"title":{},"body":{"index.html":{}}}],["follow",{"_index":889,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["forgotpasswordcompon",{"_index":58,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["formsmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":356,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["framework",{"_index":826,"title":{},"body":{"index.html":{}}}],["full",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":938,"title":{},"body":{"index.html":{}}}],["furthermor",{"_index":637,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["futur",{"_index":223,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["g",{"_index":809,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":844,"title":{},"body":{"index.html":{}}}],["gener",{"_index":635,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["get",{"_index":785,"title":{"index.html":{}},"body":{}}],["getal",{"_index":191,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["getall(searchterm",{"_index":247,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["getallerror",{"_index":414,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallerror(error",{"_index":418,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallphoto",{"_index":415,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallphotos.subscrib",{"_index":434,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallsuccess",{"_index":416,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallsuccess(photo",{"_index":423,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getbyid",{"_index":659,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["getbyid(id",{"_index":663,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["getphoto",{"_index":347,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["gi",{"_index":516,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["gif",{"_index":974,"title":{},"body":{"index.html":{}}}],["git",{"_index":802,"title":{},"body":{"index.html":{}}}],["github",{"_index":858,"title":{},"body":{"index.html":{}}}],["give",{"_index":442,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["given",{"_index":680,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["global",{"_index":212,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["go",{"_index":674,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["good",{"_index":967,"title":{},"body":{"index.html":{}}}],["grab",{"_index":354,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["graph",{"_index":1001,"title":{},"body":{"modules.html":{}}}],["hack",{"_index":387,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["handl",{"_index":847,"title":{},"body":{"index.html":{}}}],["header",{"_index":241,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/LayoutHeaderComponent.html":{}}}],["header'},{'nam",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["header.compon",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["header.component.css",{"_index":643,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.html",{"_index":644,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.t",{"_index":642,"title":{},"body":{"components/LayoutHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:10",{"_index":649,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:11",{"_index":647,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":646,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:14",{"_index":645,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":650,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header/layout",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/LayoutHeaderComponent.html":{},"coverage.html":{}}}],["help",{"_index":924,"title":{},"body":{"index.html":{}}}],["helper",{"_index":669,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["here",{"_index":835,"title":{},"body":{"index.html":{}}}],["hide",{"_index":427,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["home",{"_index":945,"title":{},"body":{"index.html":{}}}],["hook",{"_index":962,"title":{},"body":{"index.html":{}}}],["hover",{"_index":976,"title":{},"body":{"index.html":{}}}],["html",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["http",{"_index":246,"title":{},"body":{"injectables/FlickrApiService.html":{},"dependencies.html":{}}}],["http://localhost:4200",{"_index":985,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":244,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httpclientmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":370,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["httpheader",{"_index":281,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httpparam",{"_index":285,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httprequest",{"_index":283,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httprespons",{"_index":284,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["https://github.com/mitni455/isentia",{"_index":803,"title":{},"body":{"index.html":{}}}],["https://l70217a84b.execut",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iam",{"_index":850,"title":{},"body":{"index.html":{}}}],["icon",{"_index":705,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["id",{"_index":227,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["identifi",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["if(searchterm",{"_index":322,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["if(this.photo.isfavourit",{"_index":616,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["iflickrapicontract",{"_index":290,"title":{"interfaces/IFlickrApiContract.html":{}},"body":{"injectables/FlickrApiService.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["iflickrapiitem",{"_index":257,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["iflickrapiitemcontract",{"_index":292,"title":{"interfaces/IFlickrApiItemContract.html":{}},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["iflickrfeedcontract",{"_index":632,"title":{"interfaces/IFlickrFeedContract.html":{}},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["ignor",{"_index":586,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["imag",{"_index":507,"title":{},"body":{"classes/FlickrPhoto.html":{},"index.html":{}}}],["imgsrc",{"_index":363,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["implement",{"_index":162,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["improv",{"_index":925,"title":{},"body":{"index.html":{}}}],["includ",{"_index":890,"title":{},"body":{"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{}}}],["inform",{"_index":340,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["init",{"_index":574,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["initialis",{"_index":638,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["inject",{"_index":188,"title":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{}},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":348,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrTileComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["insid",{"_index":842,"title":{},"body":{"index.html":{}}}],["inspir",{"_index":395,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"index.html":{}}}],["instal",{"_index":799,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":447,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["integr",{"_index":235,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["interfac",{"_index":226,"title":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"interfaces/SidebarItem.html":{}},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{},"overview.html":{}}}],["interv",{"_index":578,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["isdevmod",{"_index":215,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["isfavourit",{"_index":457,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["isfavourite:boolean",{"_index":480,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["isload",{"_index":345,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["isselect",{"_index":709,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["issu",{"_index":816,"title":{},"body":{"index.html":{}}}],["item",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["item.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":719,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item.component.html",{"_index":720,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item.component.t",{"_index":718,"title":{},"body":{"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:12",{"_index":721,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item.component.ts:16",{"_index":722,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item/sidebar",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["jasmin",{"_index":868,"title":{},"body":{"index.html":{}}}],["jasmine/karma",{"_index":867,"title":{},"body":{"index.html":{}}}],["jira",{"_index":923,"title":{},"body":{"index.html":{}}}],["join",{"_index":325,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["js",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":314,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["karma",{"_index":869,"title":{},"body":{"index.html":{}}}],["kayla",{"_index":932,"title":{},"body":{"index.html":{}}}],["key",{"_index":963,"title":{},"body":{"index.html":{}}}],["lambda",{"_index":831,"title":{},"body":{"index.html":{}}}],["landscap",{"_index":970,"title":{},"body":{"index.html":{}}}],["laptop",{"_index":972,"title":{},"body":{"index.html":{}}}],["layout",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["layout/layout",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutheadercompon",{"_index":61,"title":{"components/LayoutHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"overview.html":{}}}],["less",{"_index":310,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["librari",{"_index":316,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["lifecycl",{"_index":884,"title":{},"body":{"index.html":{}}}],["link",{"_index":458,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["list",{"_index":253,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["list'},{'nam",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["list.compon",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":412,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.html",{"_index":413,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.t",{"_index":411,"title":{},"body":{"components/FlickrListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":431,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:39",{"_index":430,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:46",{"_index":417,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:51",{"_index":429,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:63",{"_index":422,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:81",{"_index":424,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:96",{"_index":419,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list/flickr",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrListComponent.html":{},"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["liter",{"_index":639,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["load",{"_index":362,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["local",{"_index":207,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["login",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["login.component.css",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":64,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["look",{"_index":505,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["m",{"_index":640,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["make",{"_index":308,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["manag",{"_index":848,"title":{},"body":{"index.html":{}}}],["map",{"_index":263,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["map(r",{"_index":327,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["master",{"_index":879,"title":{},"body":{"index.html":{}}}],["match",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":459,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["menu",{"_index":982,"title":{},"body":{"index.html":{}}}],["merg",{"_index":909,"title":{},"body":{"index.html":{}}}],["messag",{"_index":428,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["meta",{"_index":251,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["method",{"_index":167,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["methodolog",{"_index":919,"title":{},"body":{"index.html":{}}}],["microservic",{"_index":830,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":1004,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobil",{"_index":968,"title":{},"body":{"index.html":{}}}],["mocha",{"_index":865,"title":{},"body":{"index.html":{}}}],["mock",{"_index":950,"title":{},"body":{"index.html":{}}}],["model",{"_index":261,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["model:flickrphoto",{"_index":333,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["models/contracts/iflickrapicontract",{"_index":291,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["models/contracts/iflickrapiitemcontract",{"_index":293,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["models/factories/favouritesfactori",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrTileComponent.html":{}}}],["models/factories/photocach",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["models/flickrphotomodel",{"_index":294,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{}}}],["models/sidebaritemmodel",{"_index":713,"title":{},"body":{"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["modifi",{"_index":634,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["modul",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":309,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["morgan",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":554,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["names[1",{"_index":520,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["narrow",{"_index":318,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["navig",{"_index":937,"title":{},"body":{"index.html":{}}}],["need",{"_index":878,"title":{},"body":{"index.html":{}}}],["new",{"_index":302,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":811,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":168,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["npm",{"_index":806,"title":{},"body":{"index.html":{}}}],["object",{"_index":361,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":278,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["on",{"_index":265,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["onc",{"_index":426,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["oninit",{"_index":163,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["onlin",{"_index":787,"title":{},"body":{"index.html":{}}}],["open",{"_index":977,"title":{},"body":{"index.html":{}}}],["option",{"_index":190,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/SidebarItem.html":{},"index.html":{}}}],["ourselv",{"_index":531,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["out",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":957,"title":{},"body":{"index.html":{}}}],["overkil",{"_index":834,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1002,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":913,"title":{},"body":{"index.html":{}}}],["packag",{"_index":759,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":526,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["param",{"_index":317,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["paramet",{"_index":196,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{}}}],["parammap",{"_index":369,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["parent",{"_index":942,"title":{},"body":{"index.html":{}}}],["parser",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":256,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["password",{"_index":625,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password'},{'nam",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["password.compon",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.css",{"_index":626,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":627,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":624,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:12",{"_index":629,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:8",{"_index":628,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["past",{"_index":672,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["path",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["pathmatch",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["period",{"_index":583,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["persona",{"_index":927,"title":{},"body":{"index.html":{}}}],["phantomj",{"_index":873,"title":{},"body":{"index.html":{}}}],["phase",{"_index":904,"title":{},"body":{"index.html":{}}}],["photo",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["photo'",{"_index":250,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["photo.authournam",{"_index":622,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["photo.titl",{"_index":621,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["photo/:photoid",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["photo/favourit",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SidebarComponent.html":{}}}],["photo/search",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SidebarComponent.html":{}}}],["photo_id",{"_index":460,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["photocach",{"_index":92,"title":{"injectables/PhotoCache.html":{}},"body":{"modules/AppModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"overview.html":{}}}],["photohasht",{"_index":203,"title":{"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["photoid",{"_index":346,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["photos.foreach(photo",{"_index":678,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["photosrepres",{"_index":249,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["photot",{"_index":409,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["phototable:photohasht",{"_index":407,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["pictur",{"_index":820,"title":{},"body":{"index.html":{}}}],["pin",{"_index":793,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":307,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["pipelin",{"_index":882,"title":{},"body":{"index.html":{}}}],["plan",{"_index":899,"title":{},"body":{"index.html":{}}}],["plate",{"_index":956,"title":{},"body":{"index.html":{}}}],["platform",{"_index":839,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":813,"title":{},"body":{"index.html":{}}}],["portrait",{"_index":969,"title":{},"body":{"index.html":{}}}],["predefin",{"_index":571,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["prefer",{"_index":866,"title":{},"body":{"index.html":{}}}],["previou",{"_index":588,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["privat",{"_index":239,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["probabl",{"_index":833,"title":{},"body":{"index.html":{}}}],["prod",{"_index":994,"title":{},"body":{"index.html":{}}}],["product",{"_index":298,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":686,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'nam",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["profile.component.css",{"_index":687,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":688,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecompon",{"_index":66,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["program",{"_index":893,"title":{},"body":{"index.html":{}}}],["project",{"_index":859,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["protractor",{"_index":872,"title":{},"body":{"index.html":{}}}],["provid",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["psd/sketch",{"_index":906,"title":{},"body":{"index.html":{}}}],["public",{"_index":275,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{}}}],["publish",{"_index":461,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{},"index.html":{}}}],["pull",{"_index":677,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["push",{"_index":569,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["qualiti",{"_index":888,"title":{},"body":{"index.html":{}}}],["queri",{"_index":274,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["queryparam",{"_index":242,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["quick",{"_index":393,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["quickli",{"_index":836,"title":{},"body":{"index.html":{}}}],["rais",{"_index":814,"title":{},"body":{"index.html":{}}}],["readm",{"_index":998,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":960,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redund",{"_index":311,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["refactor",{"_index":529,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["refresh",{"_index":201,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["regist",{"_index":692,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["register.component.css",{"_index":693,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":694,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":68,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["regress",{"_index":863,"title":{},"body":{"index.html":{}}}],["reload",{"_index":987,"title":{},"body":{"index.html":{}}}],["remov",{"_index":192,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["remove(photo",{"_index":204,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["repeat",{"_index":525,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["repo",{"_index":791,"title":{},"body":{"index.html":{}}}],["repres",{"_index":306,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["request",{"_index":815,"title":{},"body":{"index.html":{}}}],["res.flickrfeed.items.map(item",{"_index":329,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["reset",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourc",{"_index":828,"title":{},"body":{"index.html":{}}}],["respons",{"_index":259,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["result",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrospect",{"_index":914,"title":{},"body":{"index.html":{}}}],["return",{"_index":172,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["review",{"_index":911,"title":{},"body":{"index.html":{}}}],["right",{"_index":708,"title":{},"body":{"components/SidebarComponent.html":{}}}],["role",{"_index":920,"title":{},"body":{"index.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["rout",{"_index":106,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"overview.html":{},"routes.html":{}}}],["routermodul",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":800,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":402,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"dependencies.html":{}}}],["rxjs/observ",{"_index":286,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["rxjs/oper",{"_index":289,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{}}}],["same",{"_index":587,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["sampl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":193,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["save(photo",{"_index":209,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["saveal",{"_index":660,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["saveall(photo",{"_index":667,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["say",{"_index":928,"title":{},"body":{"index.html":{}}}],["scaffold",{"_index":988,"title":{},"body":{"index.html":{}}}],["schema",{"_index":315,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["screenshot",{"_index":792,"title":{},"body":{"index.html":{}}}],["scrum",{"_index":918,"title":{},"body":{"index.html":{}}}],["search",{"_index":266,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["search'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["search(tag",{"_index":541,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.compon",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["search.component.css",{"_index":532,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.html",{"_index":533,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.t",{"_index":521,"title":{},"body":{"components/FlickrSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:120",{"_index":557,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:129",{"_index":542,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:150",{"_index":544,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:169",{"_index":550,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:185",{"_index":548,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:34",{"_index":559,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:54",{"_index":558,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:62",{"_index":560,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:76",{"_index":539,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:97",{"_index":540,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search/flickr",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrSearchComponent.html":{},"coverage.html":{}}}],["searchphoto",{"_index":598,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotos.subscrib",{"_index":600,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotosbytag",{"_index":536,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotosbytags(tag",{"_index":543,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotoserror",{"_index":537,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotoserror(error",{"_index":547,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotossuccess",{"_index":538,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotossuccess(photo",{"_index":549,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchtag",{"_index":573,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchterm",{"_index":276,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["searchtimeout",{"_index":535,"title":{},"body":{"components/FlickrSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":947,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["self",{"_index":312,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{}}}],["send",{"_index":503,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{}}}],["sent",{"_index":269,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["seper",{"_index":523,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["serv",{"_index":780,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["serveless",{"_index":846,"title":{},"body":{"index.html":{}}}],["server",{"_index":615,"title":{},"body":{"components/FlickrTileComponent.html":{},"index.html":{}}}],["servic",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["services/flickr",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["set",{"_index":501,"title":{},"body":{"classes/FlickrPhoto.html":{},"index.html":{}}}],["settimeout(callback",{"_index":556,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["setup",{"_index":575,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["share",{"_index":214,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["show",{"_index":388,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"index.html":{}}}],["sidebar",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["sidebar'},{'nam",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["sidebar.component.css",{"_index":714,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.css,sidebar.component.responsive.css",{"_index":698,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":699,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.responsive.css",{"_index":715,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcompon",{"_index":70,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebaritem",{"_index":700,"title":{"interfaces/SidebarItem.html":{}},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["sidebaritem.titl",{"_index":724,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["sidebaritem:sidebaritem",{"_index":723,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["sidebaritemcompon",{"_index":72,"title":{"components/SidebarItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":824,"title":{},"body":{"index.html":{}}}],["singl",{"_index":341,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["small",{"_index":566,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["solv",{"_index":443,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["southeast",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spa",{"_index":825,"title":{},"body":{"index.html":{}}}],["space",{"_index":524,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["splice",{"_index":403,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["sprint",{"_index":898,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.t",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app.component.ts:9",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/auth/auth.component.t",{"_index":161,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/auth.component.ts:12",{"_index":171,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/components/auth/auth.component.ts:8",{"_index":170,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/components/auth/confirm",{"_index":175,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/forgot",{"_index":623,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/login/login.component.t",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/login/login.component.ts:12",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:8",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/profile/profile.component.t",{"_index":685,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/profile/profile.component.ts:12",{"_index":690,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/auth/profile/profile.component.ts:8",{"_index":689,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/auth/register/register.component.t",{"_index":691,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/register/register.component.ts:12",{"_index":696,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/auth/register/register.component.ts:8",{"_index":695,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/container/container.component.t",{"_index":182,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/components/container/container.component.ts:12",{"_index":187,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/components/container/container.component.ts:8",{"_index":186,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/components/container/flickr",{"_index":335,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar",{"_index":717,"title":{},"body":{"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.t",{"_index":697,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:15",{"_index":712,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:35",{"_index":701,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:41",{"_index":702,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layout/layout",{"_index":641,"title":{},"body":{"components/LayoutHeaderComponent.html":{},"coverage.html":{}}}],["src/app/models/contracts/iflickrapicontract.t",{"_index":630,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["src/app/models/contracts/iflickrapiitemcontract.t",{"_index":636,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{},"coverage.html":{}}}],["src/app/models/factories/favouritesfactory.t",{"_index":189,"title":{},"body":{"injectables/FavouritesFactory.html":{},"interfaces/PhotoHashTable.html":{},"coverage.html":{}}}],["src/app/models/factories/favouritesfactory.ts:17",{"_index":682,"title":{},"body":{"interfaces/PhotoHashTable.html":{}}}],["src/app/models/factories/favouritesfactory.ts:24",{"_index":195,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/favouritesfactory.ts:38",{"_index":210,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/favouritesfactory.ts:51",{"_index":206,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/favouritesfactory.ts:65",{"_index":198,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/photocache.t",{"_index":658,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["src/app/models/factories/photocache.ts:19",{"_index":684,"title":{},"body":{"interfaces/PhotoHashTable-1.html":{}}}],["src/app/models/factories/photocache.ts:26",{"_index":661,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:38",{"_index":668,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:51",{"_index":666,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:64",{"_index":665,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:79",{"_index":662,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:90",{"_index":664,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/flickrphotomodel.t",{"_index":453,"title":{},"body":{"classes/FlickrPhoto.html":{},"coverage.html":{}}}],["src/app/models/flickrphotomodel.ts:14",{"_index":476,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:15",{"_index":471,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:16",{"_index":472,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:17",{"_index":468,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:18",{"_index":469,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:19",{"_index":474,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:20",{"_index":466,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:21",{"_index":467,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:22",{"_index":475,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:23",{"_index":473,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:24",{"_index":465,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:47",{"_index":477,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:53",{"_index":478,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/sidebaritemmodel.t",{"_index":716,"title":{},"body":{"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["src/app/services/flickr",{"_index":237,"title":{},"body":{"injectables/FlickrApiService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":881,"title":{},"body":{"index.html":{}}}],["stager",{"_index":896,"title":{},"body":{"index.html":{}}}],["start",{"_index":786,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":360,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["statement",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["statuscod",{"_index":631,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["storag",{"_index":224,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["storagestrategi",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":221,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["stori",{"_index":903,"title":{},"body":{"index.html":{}}}],["strategi",{"_index":377,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["stream",{"_index":568,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"interfaces/SidebarItem.html":{}}}],["strongli",{"_index":633,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["style",{"_index":390,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["subject",{"_index":562,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["subscrib",{"_index":964,"title":{},"body":{"index.html":{}}}],["success",{"_index":425,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["support",{"_index":999,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":818,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1000,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":589,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["switchmap",{"_index":565,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["switchmap((term",{"_index":592,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["sync",{"_index":208,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["tabl",{"_index":509,"title":{},"body":{"classes/FlickrPhoto.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":971,"title":{},"body":{"index.html":{}}}],["tag",{"_index":268,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiItemContract.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["tags='+searchterms.split",{"_index":324,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["take",{"_index":374,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["tap",{"_index":288,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["tarnsform",{"_index":260,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["temp",{"_index":386,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiItemContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["term",{"_index":267,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["test",{"_index":807,"title":{},"body":{"index.html":{}}}],["this.apiurl",{"_index":300,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.apiurl+'photo",{"_index":321,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.author",{"_index":493,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.author.match",{"_index":519,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.author.match(/([a",{"_index":512,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.author_id",{"_index":495,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.date_taken",{"_index":487,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.delay",{"_index":595,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.descript",{"_index":489,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.favouritesfactory.getal",{"_index":408,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["this.favouritesfactory.photo",{"_index":619,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["this.favouritesfactory.remove(this.photo",{"_index":620,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["this.favouritesfactory.save(this.photo",{"_index":617,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["this.flickrapi.destroyfavourite(photo",{"_index":233,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.flickrapi.getal",{"_index":433,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.flickrapi.getall(tag",{"_index":599,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.flickrapi.getall(term",{"_index":593,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.flickrapi.savefavourite(photo",{"_index":230,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.getallerror(err",{"_index":437,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.getallphoto",{"_index":432,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.getallsuccess(photo",{"_index":435,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.getphoto",{"_index":373,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.head",{"_index":301,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.http.get",{"_index":326,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.isfavourit",{"_index":510,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.isload",{"_index":384,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["this.layout.titl",{"_index":382,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.link",{"_index":483,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.media",{"_index":485,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.photo",{"_index":236,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photo.isfavourit",{"_index":391,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrTileComponent.html":{}}}],["this.photo.titl",{"_index":383,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.photo_id",{"_index":499,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.photocache.getbyid(this.photoid",{"_index":381,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.photocache.saveall(this.photo",{"_index":438,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["this.photoid",{"_index":379,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.photos.push(phototable[id",{"_index":410,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["this.photos[id",{"_index":681,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photos[photo.photo_id",{"_index":229,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.publish",{"_index":491,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.route.snapshot.parammap.get('photoid",{"_index":380,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.save(photo",{"_index":679,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.searchphotosbytags(tag",{"_index":596,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchphotoserror(err",{"_index":602,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchphotossuccess(photo",{"_index":601,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchtags.next(tag",{"_index":594,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchtags.pip",{"_index":582,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchtimeout",{"_index":597,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.tag",{"_index":497,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.titl",{"_index":481,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["thu",{"_index":528,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["tile",{"_index":406,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"index.html":{}}}],["tile'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["tile.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["tile.component.css",{"_index":604,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.html",{"_index":605,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.t",{"_index":603,"title":{},"body":{"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:13",{"_index":608,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.ts:17",{"_index":609,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.ts:28",{"_index":610,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile/flickr",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["time",{"_index":590,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["timeout",{"_index":572,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["timer",{"_index":551,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"index.html":{}}}],["todo",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["toggl",{"_index":611,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["togglefavourit",{"_index":606,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tool",{"_index":852,"title":{},"body":{"index.html":{}}}],["topic",{"_index":935,"title":{},"body":{"index.html":{}}}],["tradeoff",{"_index":885,"title":{},"body":{"index.html":{}}}],["travi",{"_index":853,"title":{},"body":{"index.html":{}}}],["travisci",{"_index":883,"title":{},"body":{"index.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["trello",{"_index":922,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":959,"title":{},"body":{"index.html":{}}}],["true",{"_index":358,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["turn",{"_index":273,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"injectables/PhotoCache.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typic",{"_index":895,"title":{},"body":{"index.html":{}}}],["ui",{"_index":901,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":323,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["unit",{"_index":871,"title":{},"body":{"index.html":{}}}],["unsav",{"_index":404,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["up",{"_index":506,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{}}}],["updat",{"_index":502,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["url",{"_index":320,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["us",{"_index":220,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["user",{"_index":441,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["ux",{"_index":900,"title":{},"body":{"index.html":{}}}],["valid",{"_index":313,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["variabl",{"_index":755,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":570,"title":{},"body":{"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["view",{"_index":394,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["visual",{"_index":862,"title":{},"body":{"index.html":{}}}],["void",{"_index":173,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["wait",{"_index":576,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["want",{"_index":439,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["warn",{"_index":961,"title":{},"body":{"index.html":{}}}],["we'll",{"_index":579,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["web",{"_index":875,"title":{},"body":{"index.html":{}}}],["welcom",{"_index":648,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["whether",{"_index":612,"title":{},"body":{"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["wide",{"_index":222,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["wirefram",{"_index":905,"title":{},"body":{"index.html":{}}}],["work",{"_index":174,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["write",{"_index":907,"title":{},"body":{"index.html":{}}}],["ye",{"_index":277,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["z0",{"_index":514,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["za",{"_index":513,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["zone.j",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Flickr Sample App'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \ttitle = 'Flickr Sample App';\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nAppModule -->\n\nContainerComponent->AppModule\n\n\n\n\n\nFlickrDetailsComponent\n\nFlickrDetailsComponent\n\nAppModule -->\n\nFlickrDetailsComponent->AppModule\n\n\n\n\n\nFlickrFavouritesComponent\n\nFlickrFavouritesComponent\n\nAppModule -->\n\nFlickrFavouritesComponent->AppModule\n\n\n\n\n\nFlickrListComponent\n\nFlickrListComponent\n\nAppModule -->\n\nFlickrListComponent->AppModule\n\n\n\n\n\nFlickrSearchComponent\n\nFlickrSearchComponent\n\nAppModule -->\n\nFlickrSearchComponent->AppModule\n\n\n\n\n\nFlickrTileComponent\n\nFlickrTileComponent\n\nAppModule -->\n\nFlickrTileComponent->AppModule\n\n\n\n\n\nLayoutHeaderComponent\n\nLayoutHeaderComponent\n\nAppModule -->\n\nLayoutHeaderComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarItemComponent\n\nSidebarItemComponent\n\nAppModule -->\n\nSidebarItemComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFavouritesFactory\n\nFavouritesFactory\n\nAppModule -->\n\nFavouritesFactory->AppModule\n\n\n\n\n\nFlickrApiService\n\nFlickrApiService\n\nAppModule -->\n\nFlickrApiService->AppModule\n\n\n\n\n\nPhotoCache\n\nPhotoCache\n\nAppModule -->\n\nPhotoCache->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ContainerComponent\n                            \n                            \n                                FlickrDetailsComponent\n                            \n                            \n                                FlickrFavouritesComponent\n                            \n                            \n                                FlickrListComponent\n                            \n                            \n                                FlickrSearchComponent\n                            \n                            \n                                FlickrTileComponent\n                            \n                            \n                                LayoutHeaderComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                SidebarItemComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FavouritesFactory\n                            \n                            \n                                     FlickrApiService\n                            \n                            \n                                     PhotoCache\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /**\n*\n* Core \n*\n**/\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\n/**\n*\n* Routes\n*\n**/\nimport { AppRoutingModule }     from './app-routing.module';\n\n/**\n*\n* Components\n* \n**/\nimport { AppComponent } from './components/app.component';\nimport { LayoutHeaderComponent } from './layout/layout-header/layout-header.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { SidebarItemComponent } from './components/sidebar/sidebar-item/sidebar-item.component';\nimport { ContainerComponent } from './components/container/container.component';\nimport { FlickrListComponent } from './components/container/flickr-list/flickr-list.component';\nimport { FlickrTileComponent } from './components/container/flickr-list/flickr-tile/flickr-tile.component';\nimport { FlickrDetailsComponent } from './components/container/flickr-details/flickr-details.component';\nimport { FlickrSearchComponent } from './components/container/flickr-search/flickr-search.component';\nimport { FlickrFavouritesComponent } from './components/container/flickr-favourites/flickr-favourites.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { ForgotPasswordComponent } from './components/auth/forgot-password/forgot-password.component';\nimport { ConfirmEmailComponent } from './components/auth/confirm-email/confirm-email.component';\nimport { ProfileComponent } from './components/auth/profile/profile.component';\n\n/**\n*\n* Services\n*\n**/\nimport { FlickrApiService } from './services/flickr-api/flickr-api.service';\n\n\n/**\n*\n* Factories\n*\n**/\nimport { FavouritesFactory } from './models/factories/FavouritesFactory';\nimport { PhotoCache } from './models/factories/PhotoCache';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SidebarComponent,\n        SidebarItemComponent,\n        ContainerComponent,\n        FlickrListComponent,\n        FlickrTileComponent,\n        FlickrDetailsComponent,\n        FlickrSearchComponent,\n        FlickrFavouritesComponent,\n        LayoutHeaderComponent,\n\n        /**\n        *\n        * TODO Authentication\n        *\n        **\n        AuthComponent,\n        LoginComponent,\n        RegisterComponent,\n        ForgotPasswordComponent,\n        ConfirmEmailComponent,\n        ProfileComponent\n        **/\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule, \n        AppRoutingModule,\n        HttpClientModule\n    ],\n    providers: [\n        FlickrApiService,\n        FavouritesFactory,\n        PhotoCache\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FlickrListComponent } from './components/container/flickr-list/flickr-list.component';\nimport { FlickrDetailsComponent } from './components/container/flickr-details/flickr-details.component';\nimport { FlickrSearchComponent } from './components/container/flickr-search/flickr-search.component';\nimport { FlickrFavouritesComponent } from './components/container/flickr-favourites/flickr-favourites.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'photo/search', \n\t\tpathMatch: 'full'\n\t},\n\t{\n\t\tpath: 'photo',\n\t\tcomponent: FlickrListComponent\n\t},\n\t{\n\t\tpath: 'photo/search',\n\t\tcomponent: FlickrSearchComponent\n\t},\n\t{\n\t\tpath: 'photo/favourites',\n\t\tcomponent: FlickrFavouritesComponent\n\t},\n\t{\n\t\tpath: 'photo/:photoId',\n\t\tcomponent: FlickrDetailsComponent\n\t},\n];\n\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n  \texports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/auth.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  auth works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  auth works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/confirm-email/confirm-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n            \n                styleUrls\n                confirm-email.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/confirm-email/confirm-email.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/confirm-email/confirm-email.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.css']\n})\nexport class ConfirmEmailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  confirm-email works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  confirm-email works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/container.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/container.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\t\t\t\n\t -->\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t -->\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavouritesFactory.html":{"url":"injectables/FavouritesFactory.html","title":"injectable - FavouritesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FavouritesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/FavouritesFactory.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(flickrApi: FlickrApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/FavouritesFactory.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:65\n                            \n                        \n\n\n                \n                    \n                            Get all cached favuoritesand refresh from API  \n\n\n                            \n                                Returns :     PhotoHashTable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:51\n                            \n                        \n\n\n                \n                    \n                            Remove \nRemove locally and syncs with API \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:38\n                            \n                        \n\n\n                \n                    \n                            Save \nSaves locally and syncs with API \nActs as a global facade for sharing saved photos\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     PhotoHashTable\n\n                    \n                \n                    \n                        \n                            Type :     PhotoHashTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class FavouritesFactory{\n\t\n\tphotos?: PhotoHashTable;// = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\tthis.photos[photo.photo_id] = photo;\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tdelete this.photos[photo.photo_id];\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): PhotoHashTable{\n\t\treturn this.photos;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlickrApiService.html":{"url":"injectables/FlickrApiService.html","title":"injectable - FlickrApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FlickrApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/flickr-api/flickr-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                queryParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/flickr-api/flickr-api.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(searchTerms?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Get All Photosrepresents a photo's meta data used by the Flickr List and Details components \nit is created by passing a IFlickrApiItem from the flickr api\nI do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\nOptional Search terms - If tags are sent, then we will search photos by tags to filter the search critreria by to our backend, which in turn will query the flickr public api \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerms\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     HttpHeaders\n\n                    \n                \n                    \n                        \n                            Type :     HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queryParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryParams:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { environment } from '../../../environments/environment';\nimport { IFlickrApiContract } from '../../models/contracts/IFlickrApiContract';\nimport { IFlickrApiItemContract } from '../../models/contracts/IFlickrApiItemContract';\nimport { FlickrPhoto } from '../../models/FlickrPhotoModel';\n\n\n@Injectable()\nexport class FlickrApiService {\n\n\tprivate apiUrl : string = environment.apiUrl;\n    private headers : HttpHeaders;\n    private queryParams : any;\n\n\tconstructor(private http: HttpClient) { \n\t\tif (isDevMode()) {\n\t      \tconsole.log('&#x1F44B; Development!');\n\t    } else {\n\t      \tconsole.log('&#x1F4AA; Production!');\n\t    }\n\t    console.log('&#x1F600; apiUrl: '+this.apiUrl);\n\n\n\t    this.headers = new HttpHeaders({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',                \n        });\n\t}\n\n\t/**\n\t*\n\t* Get All Photos   \n\t* represents a photo's meta data used by the Flickr List and Details components \n\t* it is created by passing a IFlickrApiItem from the flickr api\n\t* I do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\n\t*\n\t* Optional Search terms - If tags are sent, then we will search photos by tags to filter the search critreria by to our backend, which in turn will query the flickr public api \n\t*\n\t* @todo pipes make this more or less redundant, so in the future I will have response models that can self validate using json schema library\n\t*\n\t* params {} searchTerms? optional - tags to narrow the search \n\t* returns {Observable} an observable with an array of FlickrPhotos\n\t**/\n\tgetAll(searchTerms?: string): Observable{\n\n\t\tvar url = this.apiUrl+'photos';\n\n\t\tif(searchTerms !== undefined){\n\t\t\turl += '?tags='+searchTerms.split(/[ ,]+/).join(',');\n\t\t}\n\n\t\treturn this.http.get(            \n\t\t\t\turl, \n            \t{  \n                \theaders : this.headers\n            \t}\n\t\t\t).pipe(\n\t\t\t\tmap(res => {\n\t\t\t\t\t\n\t\t\t\t\tlet flickrFeed = res.flickrFeed.items.map(item => {\n\n\t\t\t\t\t\tvar contract:IFlickrApiItemContract = item;\n\t\t\t\t\t\t// @todo - check if contract is valid using json schema \n\t\t\t\t\t\tvar model:FlickrPhoto = new FlickrPhoto(contract);\n\t\t\t\t\t\treturn model;\n\n\t\t\t\t\t});\n\t\t\t\t\treturn flickrFeed;\n\t\t\t\t})\n\t\t\t)\n\t}\n\n\n\n\t\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrDetailsComponent.html":{"url":"components/FlickrDetailsComponent.html","title":"component - FlickrDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-details/flickr-details.component.ts\n\n\n    \n        Description\n    \n    \n        Flickr Details Compnent \nThis is used to display all the information about a single flickr photo \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flickr-details\n            \n\n            \n                styleUrls\n                flickr-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photoId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPhoto\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, photoCache: PhotoCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-details/flickr-details.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        photoCache\n                                                  \n                                                        \n                                                                    PhotoCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        photo\n                    \n                    \n                        Models \n\n                            \n                            Type :    FlickrPhoto\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPhoto()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Get Photo Model\nGrab from the cache first, then from the API if not found\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:50\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Loading...',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:30\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photoId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photoId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\nimport { PhotoCache } from '../../../models/factories/PhotoCache';\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\n\n\n/**\n*\n* Flickr Details Compnent \n* This is used to display all the information about a single flickr photo \n*\n* @todo DRY! Layout could be DI \n*\n**/\n@Component({\n  selector: 'app-flickr-details',\n  templateUrl: './flickr-details.component.html',\n  styleUrls: ['./flickr-details.component.css']\n})\nexport class FlickrDetailsComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Loading...',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = true; \n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\t@Input() photo: FlickrPhoto; \n\tphotoId: string; \n\n\tconstructor(private route: ActivatedRoute, private photoCache: PhotoCache) { \n\t}\n\n\tngOnInit(){\n\t\tthis.getPhoto();\n\t}\n\n\t/**\n\t*\n\t* Get Photo Model\n\t* Grab from the cache first, then from the API if not found\n\t* @todo the factory should take care of the cache/api refresh strategy , decoupling the component \n\t*\n\t*\n\t**/\n\tgetPhoto(){\n\t\tthis.photoId = this.route.snapshot.paramMap.get('photoId');\n\t\tthis.photo = this.photoCache.getById(this.photoId);\n\t\tthis.layout.title = this.photo.title;\n\t\tthis.isLoading = false;\n\n\t\t// @todo temp hack to get it to show while I fix the styles \n\t\tthis.photo.isFavourite = true; \n\t}\n\n}\n\n    \n\n    \n         \n\n\n\t\n\t \n\t\t\n\t\t\tloading ... \n\t\t\n\t\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t \t\t\t\t\tloading ... \t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrFavouritesComponent.html":{"url":"components/FlickrFavouritesComponent.html","title":"component - FlickrFavouritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrFavouritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-favourites/flickr-favourites.component.ts\n\n\n    \n        Description\n    \n    \n        Favourites component \nSave local favourites for quick viewing and inspiration!\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flickr-favourites\n            \n\n            \n                styleUrls\n                flickr-favourites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-favourites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, flickrApi: FlickrApiService, favouritesFactory: FavouritesFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        favouritesFactory\n                                                  \n                                                        \n                                                                    FavouritesFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:50\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Favourites',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:30\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:57\n                            \n                        \n\n                \n                    \n                        Models \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\n\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\nimport { PhotoHashTable, FavouritesFactory } from '../../../models/factories/FavouritesFactory';\n\n/**\n* \n* Favourites component \n* Save local favourites for quick viewing and inspiration!\n* @todo splice removed favourites when 'unsaved' \n* @bug tile not removed when 'unsaved'\n**/\n@Component({\n  selector: 'app-flickr-favourites',\n  templateUrl: './flickr-favourites.component.html',\n  styleUrls: ['./flickr-favourites.component.css']\n})\nexport class FlickrFavouritesComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Favourites',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = false; \n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\tphotos: FlickrPhoto[] = [];\n\n\tconstructor(private route: ActivatedRoute, private flickrApi: FlickrApiService, private favouritesFactory: FavouritesFactory) { \n\t}\n\n\tngOnInit() {\n\n\t\tvar photoTable:PhotoHashTable = this.favouritesFactory.getAll();\n\t\t\n\t\tfor (var id in photoTable) {\n\t\t\tthis.photos.push(photoTable[id]);\n\t\t}\n\n\t}\n\n\n}\n\n    \n\n    \n         \n\n\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrFavouritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrListComponent.html":{"url":"components/FlickrListComponent.html","title":"component - FlickrListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-list/flickr-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                flickr-list\n            \n\n            \n                styleUrls\n                flickr-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllError\n                            \n                            \n                                getAllPhotos\n                            \n                            \n                                getAllSuccess\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, flickrApi: FlickrApiService, photoCache: PhotoCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-list/flickr-list.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        photoCache\n                                                  \n                                                        \n                                                                    PhotoCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAllError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllError(error: HttpErrorResponse | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Get All Photos Failed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllPhotos\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllPhotos()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Get All Photos\nGrab all the photos from our backend and display them as tiles  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllSuccess(photos: FlickrPhoto[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Get All Photos Success\nOnce we have all the photos, display them as tiles and hide the loading message \nCache the photos locally for quick viewing from the details view \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photos\n                                                        \n                                                                    FlickrPhoto[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:39\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Flickr Feed',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:46\n                            \n                        \n\n                \n                    \n                        Models \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\nimport { PhotoCache } from '../../../models/factories/PhotoCache';\n\n\n@Component({\n\tselector: 'flickr-list',\n\ttemplateUrl: './flickr-list.component.html',\n\tstyleUrls: ['./flickr-list.component.css']\n})\nexport class FlickrListComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Flickr Feed',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = true; \n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\tphotos: FlickrPhoto[];\n\n\tconstructor(private route: ActivatedRoute, private flickrApi: FlickrApiService, private photoCache: PhotoCache) { \n\t}\n\n\tngOnInit() {\n\n\t\tthis.getAllPhotos();\n\n\t}\n\n\t/**\n\t*\n\t* Get All Photos\n\t* Grab all the photos from our backend and display them as tiles  \n\t*\n\t**/\n\tgetAllPhotos(){\n\n\t\tthis.isLoading = true; \n\n\t\tlet getAllPhotos = this.flickrApi.getAll();\n\n\t\tgetAllPhotos.subscribe(\n\t\t\tphotos => this.getAllSuccess(photos),\n\t\t\terr  => this.getAllError(err)\n\t\t)\n\t}\n\n\t/**\n\t*\n\t* Get All Photos Success\n\t* Once we have all the photos, display them as tiles and hide the loading message \n\t* Cache the photos locally for quick viewing from the details view \n\t**/\n\tgetAllSuccess(photos: FlickrPhoto[]){\n\n\t\tthis.isLoading = false;\n\t\tthis.photos = photos;\n\t\t\n\t\t// -- cache the photos for details view \n\t\tthis.photoCache.saveAll(this.photos);\n\t}\n\n\t/**\n\t*\n\t* Get All Photos Failed\n\t* @todo If loading the photos failed, we want to alert the user and give them an option so self solve or escalate by contacting us \n\t*\n\t**/\n\tprivate getAllError(error: HttpErrorResponse | any){\n\n\t\tthis.isLoading = false;\n\n\t\tlet errMsg: string;\n\t\tif (error instanceof HttpErrorResponse) {                \n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} - ${error.message}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\t\tconsole.log(errMsg);\n\n\t}\n}\n\n    \n\n    \n         \n\n\n\t\n\t \n\t\t\n\t\t\tloading ... \n\t\t\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t \t\t\t\t\tloading ... \t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlickrPhoto.html":{"url":"classes/FlickrPhoto.html","title":"class - FlickrPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlickrPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FlickrPhotoModel.ts\n        \n\n            \n                Description\n            \n            \n                FlickrPhotoModel \nrepresents a photo's meta data used by the Flickr List and Details components \nit is created by passing a IFlickrApiItem from the flickr api\nI do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                author_id\n                            \n                            \n                                date_taken\n                            \n                            \n                                description\n                            \n                            \n                                isFavourite\n                            \n                            \n                                link\n                            \n                            \n                                media\n                            \n                            \n                                photo_id\n                            \n                            \n                                published\n                            \n                            \n                                tags\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authourEmail\n                            \n                            \n                                authourName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contract: IFlickrApiItemContract)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/FlickrPhotoModel.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                  \n                                                        \n                                                                    IFlickrApiItemContract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_taken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date_taken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFavourite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFavourite:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            media\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        media:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photo_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photo_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            published\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        published:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authourEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthourEmail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authourName\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthourName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IFlickrApiItemContract} from './contracts/IFlickrApiItemContract'; \n\n/**\n*\n* FlickrPhotoModel \n* represents a photo's meta data used by the Flickr List and Details components \n* it is created by passing a IFlickrApiItem from the flickr api\n* I do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\n* @todo pipes make this more or less redundant, so in the future I will have response models that can self validate using json schema library\n*\n**/\nexport class FlickrPhoto{\n\n\ttitle: string;\n    link: string;\n    media:  string;\n    date_taken: string;\n    description: string;\n    published: string;\n    author: string;\n    author_id: string;\n    tags: string;\n    photo_id: string;\n    isFavourite:boolean;\n\n    constructor(contract: IFlickrApiItemContract) {\n\n        this.title = contract.title;\n        this.link = contract.link;\n        this.media = contract.media.m;\n        this.date_taken = contract.date_taken;\n        this.description = contract.description;\n        this.published = contract.published;\n        this.author = contract.author;\n        this.author_id = contract.author_id;\n        this.tags = contract.tags;\n        this.photo_id = contract.photo_id;\n\n        /**\n        *  set favourite false by default \n        * @todo update the api to send back favourite or not by looking up the image in the DynamoDb table \n        **/\n        this.isFavourite = false; \n    }\n\n\n    authourEmail():string{\n\n        var emails = this.author.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n        return emails ? emails[0] : \"\";\n    }\n\n    authourName():string{\n\n        const names = this.author.match(/\"(.*?)\"/);\n        return names ? names[1] : \"\";\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrSearchComponent.html":{"url":"components/FlickrSearchComponent.html","title":"component - FlickrSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-search/flickr-search.component.ts\n\n\n    \n        Description\n    \n    \n        Flickr Search Component\nThis component allows the user to search for tags seperated by spaces \nThis is repeating most of what the Flickr List page is doing thus it should be refactored so we dont repeat ourselves \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flickr-search\n            \n\n            \n                styleUrls\n                flickr-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photos\n                            \n                            \n                                    Private\n                                searchTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                search\n                            \n                            \n                                searchPhotosByTags\n                            \n                            \n                                    Private\n                                searchPhotosError\n                            \n                            \n                                searchPhotosSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, flickrApi: FlickrApiService, photoCache: PhotoCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-search/flickr-search.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        photoCache\n                                                  \n                                                        \n                                                                    PhotoCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(tags: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tags\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchPhotosByTags\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearchPhotosByTags(tags: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Search Photos by Tags\nGrab all the photos from our backend that match the comma seperated list from the search box \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tags\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchPhotosError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchPhotosError(error: HttpErrorResponse | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:185\n                            \n                        \n\n\n                \n                    \n                            Search Photos Failed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchPhotosSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearchPhotosSuccess(photos: FlickrPhoto[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:169\n                            \n                        \n\n\n                \n                    \n                            Search Photos Success\nOnce we have all the photos, display them as tiles and hide the loading message \nCache the photos locally for quick viewing from the details view \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photos\n                                                        \n                                                                    FlickrPhoto[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     \n\n                    \n                \n                    \n                        \n                            Default value : (() => {\n\t\tvar timer = 0;\n\t\treturn (callback, ms) => {\n\t\t\tclearTimeout (timer);\n\t\t\ttimer = setTimeout(callback, ms);\n\t\t};\n\t})()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:54\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Search by Tags',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:34\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:62\n                            \n                        \n\n                \n                    \n                        Models \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.searchTimeout\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\nimport {environment} from '../../../../environments/environment';\n\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\nimport { PhotoCache } from '../../../models/factories/PhotoCache';\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\n\n/**\n*\n* Flickr Search Component\n* This component allows the user to search for tags seperated by spaces \n* This is repeating most of what the Flickr List page is doing thus it should be refactored so we dont repeat ourselves \n* @todo DRY! Refactor into the List page as a small search component, not an entire repeated component  \n*\n**/\n@Component({\n\tselector: 'app-flickr-search',\n\ttemplateUrl: './flickr-search.component.html',\n\tstyleUrls: ['./flickr-search.component.css']\n})\nexport class FlickrSearchComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Search by Tags',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = false; \n\n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\tphotos: FlickrPhoto[];\n\n\t/**\n\t* @todo to be used for observable streams \n\t*\n\tphotos$: Observable;\n\t*/\n\n\t/**\n\t*\n\t* Search Terms \n\t* These are used to push search terms into an observable stream which will be looked up via the api after a predefined timeout   \n\t*\n\t**/\n\tprivate searchTimeout = environment.searchTimeout;\n\n\t/**\n\t* @todo to be used for observable streams \n\t*\n\tprivate searchTags = new Subject();\n\t*/\n\n\n\tconstructor(private route: ActivatedRoute, private flickrApi: FlickrApiService, private photoCache: PhotoCache) { \n\t}\n\n\n\t/**\n\t*\n\t* @todo Observable Stream \n\t* On init we setup the search terms as an observable stream \n\t* after waiting for a configurable interval, we'll ask the api for the search terms \n\t* we'll also filter any duplicate search terms  \n\t* \n\t**/\n\tngOnInit() {\n\n\t\t/**\n\t\t* @todo to be used for observable streams \n\t\t*\n\t\tthis.photos$ = this.searchTags.pipe(\n\n\t\t\t// wait a predefined period before searching the api \n\t\t\tdebounceTime(this.searchTimeout),\n\n\t\t\t// ignore new term if same as previous term\n\t\t\tdistinctUntilChanged(),\n\n\t\t\t// switch to new search observable each time the tags change\n\t\t\tswitchMap((term: string) => {\n\t\t\t\tthis.flickrApi.getAll(term)\n\t\t\t}),\n\n\t\t);\n\t\t*\n\t\t**/\n\t}\n\n\tdelay = (() => {\n\t\tvar timer = 0;\n\t\treturn (callback, ms) => {\n\t\t\tclearTimeout (timer);\n\t\t\ttimer = setTimeout(callback, ms);\n\t\t};\n\t})();\n\n\n\tsearch(tags: string): void {\n\n\t\t/**\n\t\t* @todo to be used for observable streams \n\t\t*\n\t\tthis.searchTags.next(tags);\n\t\t**/\n\n\t\tthis.delay(() => {\n\t\t   \n\t\t\tthis.searchPhotosByTags(tags);\n\n\t\t}, this.searchTimeout );\n\t}\n\n\t/**\n\t*\n\t* Search Photos by Tags\n\t* Grab all the photos from our backend that match the comma seperated list from the search box \n\t*\n\t**/\n\tsearchPhotosByTags(tags){\n\n\t\tthis.isLoading = true; \n\n\t\tlet searchPhotos = this.flickrApi.getAll(tags);\n\n\t\tsearchPhotos.subscribe(\n\t\t\tphotos => this.searchPhotosSuccess(photos),\n\t\t\terr  => this.searchPhotosError(err)\n\t\t)\n\t}\n\n\t/**\n\t*\n\t* Search Photos Success\n\t* Once we have all the photos, display them as tiles and hide the loading message \n\t* Cache the photos locally for quick viewing from the details view \n\t* \n\t**/\n\tsearchPhotosSuccess(photos: FlickrPhoto[]){\n\n\t\tthis.isLoading = false;\n\t\tthis.photos = photos;\n\t\t\n\t\t// -- cache the photos for details view \n\t\tthis.photoCache.saveAll(this.photos);\n\n\t}\n\n\t/**\n\t*\n\t* Search Photos Failed\n\t* @todo If loading the photos failed, we want to alert the user and give them an option so self solve or escalate by contacting us \n\t*\n\t**/\n\tprivate searchPhotosError(error: HttpErrorResponse | any){\n\n\t\tthis.isLoading = false;\n\n\t\tlet errMsg: string;\n\t\tif (error instanceof HttpErrorResponse) {                \n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} - ${error.message}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\t\tconsole.log(errMsg);\n\n\t}\n\n}\n\n    \n\n    \n         \n\n\n\t\n\n\n\t\n\t\t\n\t\t\n\t\n\t\n\t \n\t\t\n\t\t\tloading ... \n\t\t\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t\t\t\t\t\t\t\t \t\t\t\t\tloading ... \t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrTileComponent.html":{"url":"components/FlickrTileComponent.html","title":"component - FlickrTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                flickr-tile\n            \n\n            \n                styleUrls\n                flickr-tile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-tile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFavourite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(favouritesFactory: FavouritesFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favouritesFactory\n                                                  \n                                                        \n                                                                    FavouritesFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        photo\n                    \n                    \n                            \n                            Type :    FlickrPhoto\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFavourite\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFavourite()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Toggle Favourite\nThis toggles whether the photo should be saved or not\nWe send this back to the API to save this agaisnt our account for the future\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { FlickrPhoto } from '../../../../models/FlickrPhotoModel';\nimport { FavouritesFactory } from '../../../../models/factories/FavouritesFactory';\n\n@Component({\n  selector: 'flickr-tile',\n  templateUrl: './flickr-tile.component.html',\n  styleUrls: ['./flickr-tile.component.css']\n})\nexport class FlickrTileComponent implements OnInit {\n\n\t@Input() photo: FlickrPhoto;\n\n\tconstructor(private favouritesFactory: FavouritesFactory) { }\n\n\tngOnInit() {\n\t}\n\n\t/**\n\t*\n\t* Toggle Favourite\n\t* This toggles whether the photo should be saved or not\n\t* We send this back to the API to save this agaisnt our account for the future\n\t* @todo this should be saved to the model by the server \n\t*\n\t**/\n\ttoggleFavourite(){\n\n\t\tthis.photo.isFavourite = !this.photo.isFavourite;\n\n\t\tif(this.photo.isFavourite){\n\t\t\tthis.favouritesFactory.save(this.photo);\n\t\t\tconsole.log('this.favouritesFactory.photos', this.favouritesFactory.photos);\n\t\t}\n\t\telse{\n\t\t\tthis.favouritesFactory.remove(this.photo);\t\n\t\t\tconsole.log('this.favouritesFactory.photos', this.favouritesFactory.photos);\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t{{photo.title}}\n\t\t\t\n\t\t\t\n\t\t\t\t by {{photo.authourName()}} \n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{photo.title}}\t\t\t\t\t\t\t\t\t\t by {{photo.authourName()}} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                forgot-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  forgot-password works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forgot-password works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlickrApiContract.html":{"url":"interfaces/IFlickrApiContract.html","title":"interface - IFlickrApiContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlickrApiContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contracts/IFlickrApiContract.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        flickrFeed\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        flickrFeed\n                                    \n                                \n                                \n                                    \n                                        flickrFeed:     IFlickrFeedContract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFlickrFeedContract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IFlickrApiItemContract} from './IFlickrApiItemContract';\n\n/**\n*\n* This interface is used to strongly type and validate the Flickr API  feed. \n*\n**/\nexport interface IFlickrFeedContract{\n    title: string,\n    link: string;\n    description: string;\n    modified: string;\n    generator: string;\n    items: IFlickrApiItemContract[];\n}\nexport interface IFlickrApiContract{\n\tstatusCode: string;\n    flickrFeed: IFlickrFeedContract;\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlickrApiItemContract.html":{"url":"interfaces/IFlickrApiItemContract.html","title":"interface - IFlickrApiItemContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlickrApiItemContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contracts/IFlickrApiItemContract.ts\n        \n\n            \n                Description\n            \n            \n                This interface is used to strongly type and validate the Flickr API items feed. \nFurthermore it can be used as a template for initialising the FlickrPhotoModel constructor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        author_id\n                                \n                                \n                                        date_taken\n                                \n                                \n                                        description\n                                \n                                \n                                        link\n                                \n                                \n                                        media\n                                \n                                \n                                        photo_id\n                                \n                                \n                                        published\n                                \n                                \n                                        tags\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        author_id\n                                    \n                                \n                                \n                                    \n                                        author_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_taken\n                                    \n                                \n                                \n                                    \n                                        date_taken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_id\n                                    \n                                \n                                \n                                    \n                                        photo_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        published\n                                    \n                                \n                                \n                                    \n                                        published:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFlickrApiItemContract{\n\ttitle: string;\n    link: string;\n    media:  {\n    \tm: string\n    };\n    date_taken: string;\n    description: string;\n    published: string;\n    author: string;\n    author_id: string;\n    tags: string;\n    photo_id: string;\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlickrFeedContract.html":{"url":"interfaces/IFlickrFeedContract.html","title":"interface - IFlickrFeedContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlickrFeedContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contracts/IFlickrApiContract.ts\n        \n\n            \n                Description\n            \n            \n                This interface is used to strongly type and validate the Flickr API  feed. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        generator\n                                \n                                \n                                        items\n                                \n                                \n                                        link\n                                \n                                \n                                        modified\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generator\n                                    \n                                \n                                \n                                    \n                                        generator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     IFlickrApiItemContract[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFlickrApiItemContract[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modified\n                                    \n                                \n                                \n                                    \n                                        modified:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IFlickrApiItemContract} from './IFlickrApiItemContract';\n\n/**\n*\n* This interface is used to strongly type and validate the Flickr API  feed. \n*\n**/\nexport interface IFlickrFeedContract{\n    title: string,\n    link: string;\n    description: string;\n    modified: string;\n    generator: string;\n    items: IFlickrApiItemContract[];\n}\nexport interface IFlickrApiContract{\n\tstatusCode: string;\n    flickrFeed: IFlickrFeedContract;\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutHeaderComponent.html":{"url":"components/LayoutHeaderComponent.html","title":"component - LayoutHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout-header/layout-header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                layout-header\n            \n\n            \n                styleUrls\n                layout-header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./layout-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                crumbs\n                            \n                            \n                                imgSrc\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout-header/layout-header.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        crumbs\n                    \n                    \n                        \n                            Default value : [\n\t\t{path:'/', title: 'Dashboard'}\n\t]\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imgSrc\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : '/assets/img/flickr.png'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'Welcome'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n\tselector: 'layout-header',\n\ttemplateUrl: './layout-header.component.html',\n\tstyleUrls: ['./layout-header.component.css']\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n\t@Input() title: string = 'Welcome';\n\t@Input() imgSrc: string = '/assets/img/flickr.png'; \n\t@Input() crumbs = [\n\t\t{path:'/', title: 'Dashboard'}\n\t];\n\n  \tconstructor() { }\n\n  \tngOnInit() {\n  \t}\n\n}\n\n    \n\n    \n        \n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\t{{crumb.title}}\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\t{{title}}\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t{{crumb.title}}\t\t\t\t\t\t\t\t\t\t\t\t{{title}}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/login/login.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  login works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  login works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoCache.html":{"url":"injectables/PhotoCache.html","title":"injectable - PhotoCache","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PhotoCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/PhotoCache.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                            \n                                saveAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(flickrApi: FlickrApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/PhotoCache.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:79\n                            \n                        \n\n\n                \n                    \n                            Get all cached favuoritesand refresh from API  \n\n\n                            \n                                Returns :     PhotoHashTable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:90\n                            \n                        \n\n\n                \n                    \n                            Get by id \nand refresh from API  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FlickrPhoto\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:64\n                            \n                        \n\n\n                \n                    \n                            Remove \nRemove locally and syncs with API \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:51\n                            \n                        \n\n\n                \n                    \n                            Save \nSaves locally and syncs with API \nActs as a global facade for sharing saved photos\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveAll(photos: FlickrPhoto[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:38\n                            \n                        \n\n\n                \n                    \n                            Save All\nHelper method to bulk save photos \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photos\n                                                        \n                                                                    FlickrPhoto[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     PhotoHashTable\n\n                    \n                \n                    \n                        \n                            Type :     PhotoHashTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n* @todo DRY! this is a copy paste of Favourites. This should be one factory. \n* @todo Architecture: Components should go via one Models facade/cache which will decide whether to refresh cache from api or pull from local \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class PhotoCache{\n\t\n\tprivate photos?: PhotoHashTable; // = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save All\n\t* Helper method to bulk save photos \n\t**/\n\tsaveAll(photos: FlickrPhoto[]){\n\t\tphotos.forEach(photo => {\n\t\t\tthis.save(photo);\n\t\t})\n\t}\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\tthis.photos[photo.photo_id] = photo;\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tdelete this.photos[photo.photo_id];\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): PhotoHashTable{\n\t\treturn this.photos;\n\t}\n\n\t/**\n\t*\n\t* Get by id \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t* return FlickrPhoto for the given ID\n\t**/\n\tgetById(id): FlickrPhoto{\n\t\treturn this.photos[id];\n\t}\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhotoHashTable.html":{"url":"interfaces/PhotoHashTable.html","title":"interface - PhotoHashTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PhotoHashTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/FavouritesFactory.ts\n        \n\n            \n                Description\n            \n            \n                Favourites Factory \nThis is used as a facade to get and store all favourites app wide \nIt can also be used to sync with the API \nand in the future @todo cache to local storage or cookies \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    FlickrPhoto\n\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/FavouritesFactory.ts:17\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class FavouritesFactory{\n\t\n\tphotos?: PhotoHashTable;// = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\tthis.photos[photo.photo_id] = photo;\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tdelete this.photos[photo.photo_id];\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): PhotoHashTable{\n\t\treturn this.photos;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhotoHashTable-1.html":{"url":"interfaces/PhotoHashTable-1.html","title":"interface - PhotoHashTable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PhotoHashTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/PhotoCache.ts\n        \n\n            \n                Description\n            \n            \n                Favourites Factory \nThis is used as a facade to get and store all favourites app wide \nIt can also be used to sync with the API \nand in the future @todo cache to local storage or cookies \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    FlickrPhoto\n\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/PhotoCache.ts:19\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n* @todo DRY! this is a copy paste of Favourites. This should be one factory. \n* @todo Architecture: Components should go via one Models facade/cache which will decide whether to refresh cache from api or pull from local \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class PhotoCache{\n\t\n\tprivate photos?: PhotoHashTable; // = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save All\n\t* Helper method to bulk save photos \n\t**/\n\tsaveAll(photos: FlickrPhoto[]){\n\t\tphotos.forEach(photo => {\n\t\t\tthis.save(photo);\n\t\t})\n\t}\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\tthis.photos[photo.photo_id] = photo;\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tdelete this.photos[photo.photo_id];\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): PhotoHashTable{\n\t\treturn this.photos;\n\t}\n\n\t/**\n\t*\n\t* Get by id \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t* return FlickrPhoto for the given ID\n\t**/\n\tgetById(id): FlickrPhoto{\n\t\treturn this.photos[id];\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/profile/profile.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/profile/profile.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  profile works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  profile works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/register/register.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/register/register.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  register works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  register works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.css,sidebar.component.responsive.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidebarItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar.component.ts:35\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarItems:     SidebarItem[]\n\n                    \n                \n                    \n                        \n                            Type :     SidebarItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t\t{\n\t\t\ttitle: 'All Flikr Photos',\n\t\t\timgSrc: '/assets/img/stag_lines_w.png',\n\t\t\tpath: '/photo',\n\t\t\ticon: 'fa fa-chevron-right', \n\t\t\tisSelected: true\n\t\t},\n\t\t{\n\t\t\ttitle: 'Search by Tags',\n\t\t\timgSrc: '/assets/img/dragon_lines_w.png',\n\t\t\tpath: '/photo/search',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Favourites', \n\t\t\timgSrc: '/assets/img/flower_lines_w.png',\n\t\t\tpath: '/photo/favourites',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t}\n\t]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport {SidebarItem} from '../../models/SidebarItemModel';\n\n@Component({\n\tselector: 'app-sidebar',\n\ttemplateUrl: './sidebar.component.html',\n\tstyleUrls: [\n\t\t'./sidebar.component.css',\n\t\t'./sidebar.component.responsive.css'\n\t]\n})\nexport class SidebarComponent implements OnInit {\n\n\tsidebarItems: SidebarItem[] = [\n\t\t{\n\t\t\ttitle: 'All Flikr Photos',\n\t\t\timgSrc: '/assets/img/stag_lines_w.png',\n\t\t\tpath: '/photo',\n\t\t\ticon: 'fa fa-chevron-right', \n\t\t\tisSelected: true\n\t\t},\n\t\t{\n\t\t\ttitle: 'Search by Tags',\n\t\t\timgSrc: '/assets/img/dragon_lines_w.png',\n\t\t\tpath: '/photo/search',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Favourites', \n\t\t\timgSrc: '/assets/img/flower_lines_w.png',\n\t\t\tpath: '/photo/favourites',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t}\n\t];\n\n\tconstructor() { \n\t\t\n\t}\n\n\tngOnInit() {\n\t\t\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\tFlickr App \n\t\t\n\t\n\t\n\t\t\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\tFlickr App \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SidebarItem.html":{"url":"interfaces/SidebarItem.html","title":"interface - SidebarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SidebarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/SidebarItemModel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                            Optional\n                                        isSelected\n                                \n                                \n                                        path\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSelected\n                                    \n                                \n                                \n                                    \n                                        isSelected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SidebarItem{\n\timgSrc: string; \n\tpath: string;\n\ttitle: string; \n\ticon: string;\n\tisSelected?: boolean;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarItemComponent.html":{"url":"components/SidebarItemComponent.html","title":"component - SidebarItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar-item/sidebar-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-item\n            \n\n            \n                styleUrls\n                sidebar-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidebarItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar-item/sidebar-item.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidebarItem\n                    \n                    \n                            \n                            Type :    SidebarItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar-item/sidebar-item.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar-item/sidebar-item.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport {SidebarItem} from '../../../models/SidebarItemModel';\n\n@Component({\n\tselector: 'app-sidebar-item',\n\ttemplateUrl: './sidebar-item.component.html',\n\tstyleUrls: ['./sidebar-item.component.css']\n})\nexport class SidebarItemComponent implements OnInit {\n\t\n\t@Input() sidebarItem:SidebarItem; \n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\t{{sidebarItem.title}}\n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t{{sidebarItem.title}}\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/components/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/confirm-email/confirm-email.component.ts\n            \n            \n                component\n            \n            \n                ConfirmEmailComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/forgot-password/forgot-password.component.ts\n            \n            \n                component\n            \n            \n                ForgotPasswordComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/profile/profile.component.ts\n            \n            \n                component\n            \n            \n                ProfileComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/container/container.component.ts\n            \n            \n                component\n            \n            \n                ContainerComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-details/flickr-details.component.ts\n            \n            \n                component\n            \n            \n                FlickrDetailsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-favourites/flickr-favourites.component.ts\n            \n            \n                component\n            \n            \n                FlickrFavouritesComponent\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-list/flickr-list.component.ts\n            \n            \n                component\n            \n            \n                FlickrListComponent\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts\n            \n            \n                component\n            \n            \n                FlickrTileComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-search/flickr-search.component.ts\n            \n            \n                component\n            \n            \n                FlickrSearchComponent\n            \n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar-item/sidebar-item.component.ts\n            \n            \n                component\n            \n            \n                SidebarItemComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layout/layout-header/layout-header.component.ts\n            \n            \n                component\n            \n            \n                LayoutHeaderComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FlickrPhotoModel.ts\n            \n            \n                class\n            \n            \n                FlickrPhoto\n            \n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/models/SidebarItemModel.ts\n            \n            \n                interface\n            \n            \n                SidebarItem\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/contracts/IFlickrApiContract.ts\n            \n            \n                interface\n            \n            \n                IFlickrApiContract\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/contracts/IFlickrApiContract.ts\n            \n            \n                interface\n            \n            \n                IFlickrFeedContract\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/models/contracts/IFlickrApiItemContract.ts\n            \n            \n                interface\n            \n            \n                IFlickrApiItemContract\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/models/factories/FavouritesFactory.ts\n            \n            \n                injectable\n            \n            \n                FavouritesFactory\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/models/factories/FavouritesFactory.ts\n            \n            \n                interface\n            \n            \n                PhotoHashTable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/factories/PhotoCache.ts\n            \n            \n                injectable\n            \n            \n                PhotoCache\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/models/factories/PhotoCache.ts\n            \n            \n                interface\n            \n            \n                PhotoHashTable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/flickr-api/flickr-api.service.ts\n            \n            \n                injectable\n            \n            \n                FlickrApiService\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            body-parser : ^1.18.3\n        \n            core-js : ^2.5.4\n        \n            dotenv : ^6.0.0\n        \n            express : ^4.16.3\n        \n            http-errors : ^1.7.0\n        \n            morgan : ^1.9.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.3.1\n        \n            serve-favicon : ^2.5.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQuick Links\n\nOnline Demo\nCode Docs\nBackend repo\n\nScreenshots\nSearch Page\nSearch by Tag \n\nFavourites Page\nSave your favourites to a pin board\n\nDetails Page\nThis is far from finished, it should show the authour details too\n\nPublic Flikr Feed Page\nBrowse the public feed for inspiration\n\nQuick Start\nInstall and run \n\nClone: git clone https://github.com/mitni455/isentia-client-angular.git\nInstall dependencies: npm i\nRun tests \nInstall the CLI (if not installed) npm i -g @angular/cli \nng test\nng e2e\nServe locally: ng serve\n\nPlease raise a pull request for any developments, and use the issues for bugs and feature requests. Be sure to run compodoc to generate docs.\nArchitecture\n\n\nAlso pictured is the backend architecture, available at this repo \n\n\n\nApplication\nDescription\n\n\n\n\nAngular6\nAngular6 is used as the simple SPA framework.\n\n\nExpressJs\nThe app is served by ExpressJs. We could also use this as a simple resourceful API too, however we have chosen to use microservices on Lambda\n\n\nDocker\nDocker is probably overkill here, but is used as a simple container to quickly setup the Angular/Express app on all environments (dev/test/staging)\n\n\n\n\n\n\nPlatform\nDescription\n\n\n\n\nBeanstalk\nAngular App is served using ExpressJs inside a Docker container\n\n\nAWS Gateway\nThe Angular App calls the AWS Gateway\n\n\nLambda\nA serveless microservice for handling Flickr and user management\n\n\nCognito\nnot used Used for User IAM and AAA\n\n\nDynamoDb\nUsed for saving user favourites.\n\n\n\n\n\n\nTools\nDescription\n\n\n\n\nTravis CI\nContinuous Integration and Deployment\n\n\nCompoDoc\nDocumentation\n\n\nAgile\nGithub Projects\n\n\nBackstopJS 3\nVisual regression testing for responsive CSS\n\n\nMocha\nIntegration and API Testing (used for backend repo. I prefer it to Jasmine/Karma)\n\n\nJasmine + Karma\nBuilt in ng unit testing\n\n\nProtractor\nBuilt in ng e2e testing with PhantomJs and Chrome Web Driver\n\n\n\nCI/CD\n\n\n\n\nAlso pictured is the backend architecture, available at this repo \nEnvironments\n\n\n\nEnvironment\nDescription\n\n\n\n\nTest\nBecause this is AWS we need to deploy to a test environment online before we can run the integration tests. If these pass then the master branch will be deployed to the staging environment.\n\n\nStaging\nThe master branch will be deployed to the staging environment after all tests pass on the test environment.\n\n\nProduction\nThe production branch will be deployed to the production environment after all tests pass on the test environment. This is not setup for our simple example\n\n\n\nPipeline\nTravisCi is used as our Continuous Integration service. \nDevelopment Lifecycle\nDepending on the client tradeoffs between time, cost and quality I would follow the following development lifecycle including agile approach, extreme programming and BDD. \n\n\nDepending on the project, I typically have stagered design + development sprints \n\n\n\nSprint\nDescription\n\n\n\n\nDesign\nPlan > UX > UI > Backlog\n\n\nDevelopment\nPlan > User Stories > Test > Code > Deploy\n\n\n\n\n\n\n\n\nUser Story\nLifecycle\n\n\n\n\nUser Story\nCreate issue for each user story\n\n\nUX + UI\nIf no design phase, create wireframes and PSD/Sketch designs if applicable\n\n\nFailing Test\nDesign e2e test and unit test that fail\n\n\nCode\nCreate new branch for each user story.\n\n\nPassing Test\nWrite code to pass tests\n\n\nCommit\nRefactor to pass all tests and pull request for merge to master branch\n\n\nTest Env\nPush to test environment\n\n\nStaging\nIf tests pass, push to staging\n\n\nReview\nBusiness owner to review then push to production branch\n\n\nProduction\nIf passes tests, push to production\n\n\nRetrospective\nCollect feedback for sprint retrospective or add to product backlog\n\n\n\nPlan\nWe will use SCRUM as our agile methodology. Before the sprint starts we need to source the Product Backlog from the Business Owner and the roles we will be serving as our customer. \nWe will use Trello, Jira or Github Projects as our agile tool. \nThe roles are simple, we have one user. Optionally, it is typically helpful and improves enaggement with the client or business owner to source a persona for our roles rather than just saying \"user\" in our stories. This helps us focus on delivering value for the customer. \ne.g. Kayla as \"User\"\n\n\nThe epics for this sprint include: \n\n\n\nID\nEpic\n\n\n\n\nEpic 1:\nAs a user, I want to view the public feed from Flickr, so that I can save my favourites\n\n\nEpic 2:\nAs a user, I want to search for topics from the flickr feed, so that I can save time looking for topics I like\n\n\nEpic 3:\nAs a user, I want to save my favourites, so that I can view them quickly when I return to the app\n\n\nEpic 4:\nAs a user, I want a simple sidebar, so that I can navigate between Flickr, searches and favourites\n\n\n\nUX and UI\nThese epics can be further broken down into the following user stories by creating wireframes for the UX (User Experience)\n\n\n\n\n\nParent ID\nUI Epic\n\n\n\n\nEpic 1:\nAs a user, I want a Flickr list page\n\n\nEpic 1:\nAs a user, I want a Flickr details page\n\n\nEpic 2:\nAs a user, I want a search page\n\n\nEpic 3:\nAs a user, I want a favourites page\n\n\n\nBDD - e2e Tests\nFollowing BDD we already have enough for some e2e tests using protractor: \nAs a user, I want a Flickr list page  \n* Go to the home page at '/'\n* Expect to see 'Flickr Angular App'\n* Expect the 'All Photos' sidebar to be active As a user, I want a Flickr details page \n* Go to the details page at /flickr/{mockImageId}\n* Expect to see the title 'Mock Title'\n* Expect to see the image \n* Expect to see the the authour 'Mock Authour'\n* Expect to see the image description 'Mock Description' As a user, I want a search page \n* Go to the search page at '/flickr/search'\n* Enter the search term 'mock term' to a list of mock images\n* Expect the 'Search' sidebar to be active As a user, I want a simple sidebar \n* Expect to see a sidebar with the 'All Images'\n* Expect to see a sidebar with the 'Search'\n* Expect to see a sidebar with the anchor 'Favourites' User Stories\nA User Story as issues \n\n\n\nBoilerplate User Story\nBoiler Plate Tests\n\n\n\n\nComponents\n*DI  *Elements on Dom  * HTML for Mock Model  *Inputs()  *Outputs()  *Events triggered  *Events received  *Test for state: loading, success, warning, error  *Test lifecycle hooks  * BackstopJs CSS tests for responsive\n\n\nModels\n* DI   *Key /values set  * JSON Schema validation\n\n\nServices\n* DI  * Observable subscribe  * Get set  * Integration test for API\n\n\n\n\n\n\n#\n\n\n\n#\n\n\n\n#\n\n\n\n -->\n\n\n\n\nComponents\nAs a user, I want a Flickr list page  \n\nFlickr List component\nFlickr Tile component\n\nBDD/TDD - Flickr List component\n* should create the page\n* should show tiles for mock FlickrImages models \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopBDD/TDD - Flickr Tile component\n* should be created \n* should show loading gif \n* should show mock image \n* should show mock title \n* should hide the authour by deafult  \n* should show authour on hover \n* should open the flickr details page on click \n* should have favourite button \n* favourite button should be off by default \n* favourite button should be on when Flickr Image model is saved \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopAs a user, I want a Flickr details page \n\nFlickr details component\n\nBDD/TDD - Flickr details component\n* should be created \n* should show Image \n* should show title \n* should show authour \n* should show description \n* should show back button \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopAs a user, I want a search page \nBDD/TDD - Search Page\n* should be created \n* should have search bar \n* should have no search tiles by default \n* should show loading \n* should show mock tiles for search term \"mock\" \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopAs a user, I want a simple sidebar \nBDD/TDD - Unit Tests\n* should be created \n* should have menu item for All Images\n* should have menu item for Favourites\n* should have menu item for Search \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopCode Docs\nSee the published code docs here\n\nAngular Development\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nAppModule -->\n\nContainerComponent->AppModule\n\n\n\n\n\nFlickrDetailsComponent\n\nFlickrDetailsComponent\n\nAppModule -->\n\nFlickrDetailsComponent->AppModule\n\n\n\n\n\nFlickrFavouritesComponent\n\nFlickrFavouritesComponent\n\nAppModule -->\n\nFlickrFavouritesComponent->AppModule\n\n\n\n\n\nFlickrListComponent\n\nFlickrListComponent\n\nAppModule -->\n\nFlickrListComponent->AppModule\n\n\n\n\n\nFlickrSearchComponent\n\nFlickrSearchComponent\n\nAppModule -->\n\nFlickrSearchComponent->AppModule\n\n\n\n\n\nFlickrTileComponent\n\nFlickrTileComponent\n\nAppModule -->\n\nFlickrTileComponent->AppModule\n\n\n\n\n\nLayoutHeaderComponent\n\nLayoutHeaderComponent\n\nAppModule -->\n\nLayoutHeaderComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarItemComponent\n\nSidebarItemComponent\n\nAppModule -->\n\nSidebarItemComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFavouritesFactory\n\nFavouritesFactory\n\nAppModule -->\n\nFavouritesFactory->AppModule\n\n\n\n\n\nFlickrApiService\n\nFlickrApiService\n\nAppModule -->\n\nFlickrApiService->AppModule\n\n\n\n\n\nPhotoCache\n\nPhotoCache\n\nAppModule -->\n\nPhotoCache->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  \tproduction: true,\n  \tapiUrl: 'https://l70217a84b.execute-api.ap-southeast-2.amazonaws.com/production/',\n  \tsearchTimeout: 3000\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tproduction: false,\n\tapiUrl: 'https://l70217a84b.execute-api.ap-southeast-2.amazonaws.com/staging/',\n\tsearchTimeout: 300,\n\tstorageStrategy: 'cache'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
